<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ReportingService" targetNamespace="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008">
  <wsdl:types>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/" elementFormDefault="qualified" targetNamespace="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008">
      <xs:simpleType name="AnswerColorType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Answer">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">3</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Scale">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">4</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Loopmember">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">5</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PredefinedAnswer">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">6</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="AnswerColorType" nillable="true" type="tns:AnswerColorType"/>
      <xs:simpleType name="OverridedTextType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Text">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Answer">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">3</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Scale">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">4</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Loopmember">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">5</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PredefinedList">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">6</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="OverridedTextType" nillable="true" type="tns:OverridedTextType"/>
      <xs:element name="GetDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetDataSourceRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetDataSourceRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSourceId" type="ser:guid"/>
              <xs:element minOccurs="0" name="DataFilter" nillable="true" type="tns:DataSourceDataFilter"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetDataSourceRequest" nillable="true" type="tns:GetDataSourceRequest"/>
      <xs:complexType name="RequestBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="AuthenticationKey" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="RequestBase" nillable="true" type="tns:RequestBase"/>
      <xs:complexType name="AssignPortalUserListRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element name="ReportNumber" type="xs:int"/>
              <xs:element minOccurs="0" name="EnduserListId" type="xs:int"/>
              <xs:element minOccurs="0" name="PanelId" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="AssignPortalUserListRequest" nillable="true" type="tns:AssignPortalUserListRequest"/>
      <xs:complexType name="CreateEndUserListRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="EndUsers" nillable="true" type="tns:ArrayOfEndUser"/>
              <xs:element minOccurs="0" name="EndUserCompanyName" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="NeverForcePasswordChange" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateEndUserListRequest" nillable="true" type="tns:CreateEndUserListRequest"/>
      <xs:complexType name="ArrayOfEndUser">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EndUser" nillable="true" type="tns:EndUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfEndUser" nillable="true" type="tns:ArrayOfEndUser"/>
      <xs:complexType name="EndUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="UserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Password" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Email" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="FirstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="LastName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Language" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="EndUser" nillable="true" type="tns:EndUser"/>
      <xs:complexType name="GenericRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="StringValue" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="IntValue" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GenericRequest" nillable="true" type="tns:GenericRequest"/>
      <xs:complexType name="GetReportDefinitionRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportNumber" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetReportDefinitionRequest" nillable="true" type="tns:GetReportDefinitionRequest"/>
      <xs:complexType name="ImportRemoteReportRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="RemoteReportNumber" type="xs:int"/>
              <xs:element minOccurs="0" name="RemoteSite" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="RemoteUserName" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="RemotePassword" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="PublishReport" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ReportName" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="IncludeData" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ReuseExistingProjects" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ReuseExistingDbSchemas" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ReuseExistingSurveyLayouyts" type="xs:boolean"/>
              <xs:element minOccurs="0" name="GenerateBitStreamFiles" type="xs:boolean"/>
              <xs:element minOccurs="0" name="UseSsl" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ImportRemoteReportRequest" nillable="true" type="tns:ImportRemoteReportRequest"/>
      <xs:complexType name="RenderRequestBase">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="SerializedDynamicReportState" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderRequestBase" nillable="true" type="tns:RenderRequestBase"/>
      <xs:complexType name="RenderTextRequestBase">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderRequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ComponentId" type="ser:guid"/>
              <xs:element minOccurs="0" name="PageId" type="ser:guid"/>
              <xs:element minOccurs="0" name="LanguageId" type="xs:int"/>
              <xs:element minOccurs="0" name="Mode" type="tns:ReportingMode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderTextRequestBase" nillable="true" type="tns:RenderTextRequestBase"/>
      <xs:simpleType name="ReportingMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="View"/>
          <xs:enumeration value="Design"/>
          <xs:enumeration value="Analyst"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ReportingMode" nillable="true" type="tns:ReportingMode"/>
      <xs:complexType name="RenderActiveFilterSummaryRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderTextRequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="IncludeRenderedObject" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IncludeHtml" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderActiveFilterSummaryRequest" nillable="true" type="tns:RenderActiveFilterSummaryRequest"/>
      <xs:complexType name="CreateReportFromRESTRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSourceNumber" type="xs:int"/>
              <xs:element minOccurs="0" name="TemplateNumber" type="xs:int"/>
              <xs:element minOccurs="0" name="UseTestDataBase" type="xs:boolean"/>
              <xs:element minOccurs="0" name="CreateAsTemplate" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="DuplicateDataSource" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateReportFromRESTRequest" nillable="true" type="tns:CreateReportFromRESTRequest"/>
      <xs:complexType name="RenderQuestionnaireTextRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderTextRequestBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderQuestionnaireTextRequest" nillable="true" type="tns:RenderQuestionnaireTextRequest"/>
      <xs:complexType name="RenderPageTitleRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderTextRequestBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderPageTitleRequest" nillable="true" type="tns:RenderPageTitleRequest"/>
      <xs:complexType name="RenderTextRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderTextRequestBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderTextRequest" nillable="true" type="tns:RenderTextRequest"/>
      <xs:complexType name="RenderGaugeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderRequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="PageId" type="ser:guid"/>
              <xs:element minOccurs="0" name="GaugeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Mode" type="tns:ReportingMode"/>
              <xs:element minOccurs="0" name="LanguageId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderGaugeRequest" nillable="true" type="tns:RenderGaugeRequest"/>
      <xs:complexType name="RenderChartRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderRequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="PageId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ChartId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Mode" type="tns:ReportingMode"/>
              <xs:element minOccurs="0" name="ImageFormat" nillable="true" type="tns:ImageFormat"/>
              <xs:element minOccurs="0" name="IncludeImage" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IncludeChartSeries" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IncludeChart" type="xs:boolean"/>
              <xs:element minOccurs="0" name="LanguageId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderChartRequest" nillable="true" type="tns:RenderChartRequest"/>
      <xs:simpleType name="ImageFormat">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Png"/>
          <xs:enumeration value="Flash"/>
          <xs:enumeration value="Jpeg"/>
          <xs:enumeration value="Bmp"/>
          <xs:enumeration value="Emf"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ImageFormat" nillable="true" type="tns:ImageFormat"/>
      <xs:complexType name="DeletePageComponentRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ComponentId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DeletePageComponentRequest" nillable="true" type="tns:DeletePageComponentRequest"/>
      <xs:complexType name="DeleteReportTreeNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="NodeId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DeleteReportTreeNodeRequest" nillable="true" type="tns:DeleteReportTreeNodeRequest"/>
      <xs:complexType name="GetPageComponentRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ComponentId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Mode" type="tns:ReportingMode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetPageComponentRequest" nillable="true" type="tns:GetPageComponentRequest"/>
      <xs:complexType name="RenderTableRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderRequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="PageId" type="ser:guid"/>
              <xs:element minOccurs="0" name="TableId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Mode" type="tns:ReportingMode"/>
              <xs:element minOccurs="0" name="LanguageId" type="xs:int"/>
              <xs:element minOccurs="0" name="RenderForExcel" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderTableRequest" nillable="true" type="tns:RenderTableRequest"/>
      <xs:complexType name="MoveReportTreeNodesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="TargetNodeId" type="ser:guid"/>
              <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="NodeIds" nillable="true" type="q1:ArrayOfguid"/>
              <xs:element minOccurs="0" name="RelativeNodePosition" type="tns:RelativeNodePosition"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="MoveReportTreeNodesRequest" nillable="true" type="tns:MoveReportTreeNodesRequest"/>
      <xs:simpleType name="RelativeNodePosition">
        <xs:restriction base="xs:string">
          <xs:enumeration value="LastChild">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">3</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="FirstChild">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NextSibling">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">1</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PreviousSibling">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">0</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="RelativeNodePosition" nillable="true" type="tns:RelativeNodePosition"/>
      <xs:complexType name="UpdateReportTreeNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Node" nillable="true" type="tns:ReportTreeNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateReportTreeNodeRequest" nillable="true" type="tns:UpdateReportTreeNodeRequest"/>
      <xs:complexType name="ReportTreeNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ReportTreeNode" nillable="true" type="tns:ReportTreeNode"/>
      <xs:complexType name="ReportRootNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportTreeNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Children" nillable="true" type="tns:ArrayOfReportTreeNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportRootNode" nillable="true" type="tns:ReportRootNode"/>
      <xs:complexType name="ArrayOfReportTreeNode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ReportTreeNode" nillable="true" type="tns:ReportTreeNode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfReportTreeNode" nillable="true" type="tns:ArrayOfReportTreeNode"/>
      <xs:complexType name="ReportPageNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportTreeNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Ident" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="ComponentDescriptions" nillable="true" type="tns:ArrayOfComponentDescription"/>
              <xs:element minOccurs="0" name="IsHidden" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportPageNode" nillable="true" type="tns:ReportPageNode"/>
      <xs:complexType name="ArrayOfComponentDescription">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ComponentDescription" nillable="true" type="tns:ComponentDescription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfComponentDescription" nillable="true" type="tns:ArrayOfComponentDescription"/>
      <xs:complexType name="ComponentDescription">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="Type" type="tns:WysiwygComponentType"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Origin" type="tns:ComponentOrigin"/>
          <xs:element minOccurs="0" name="IsHidden" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ComponentDescription" nillable="true" type="tns:ComponentDescription"/>
      <xs:simpleType name="WysiwygComponentType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NativeHtml">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">1</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportPageLink">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">11</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Filter">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">4</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="QuestionnaireText">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">10</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AggregatedTable">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Navigator">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">6</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PageTarget">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">7</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PageDesignArea">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">8</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PageTitle">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">9</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ChartDataDef">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">3</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AdminMenu">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">12</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ActiveFilterSummary">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">13</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="VerbatimTable">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">14</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LanguageText">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">15</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Presentation">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">18</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="HitList">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">17</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BenchmarkSelector">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">34</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ParameterNavigator">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">58</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalButton">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">59</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalDatePicker">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">60</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SingleViewComponent">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">64</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="QuestionResponse">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">65</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalHierarchy">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">61</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalDropDown">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">62</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalInput">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">63</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GaugeDataDef">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">66</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SurveyLink">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">68</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BitStreamUpdater">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">69</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalLinearRegression">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">71</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalMultivariateStatistics">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">72</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalRegressionChart">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">73</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReportalPageFilter">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">74</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="WysiwygComponentType" nillable="true" type="tns:WysiwygComponentType"/>
      <xs:simpleType name="ComponentOrigin">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Page"/>
          <xs:enumeration value="PageMaster"/>
          <xs:enumeration value="ReportMaster"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ComponentOrigin" nillable="true" type="tns:ComponentOrigin"/>
      <xs:complexType name="ReportFolderNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportTreeNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfReportTreeNode"/>
              <xs:element minOccurs="0" name="IsHidden" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportFolderNode" nillable="true" type="tns:ReportFolderNode"/>
      <xs:complexType name="CreatePageComponentsRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="PageId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Components" nillable="true" type="tns:ArrayOfWysiwygComponent"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreatePageComponentsRequest" nillable="true" type="tns:CreatePageComponentsRequest"/>
      <xs:complexType name="ArrayOfWysiwygComponent">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="WysiwygComponent" nillable="true" type="tns:WysiwygComponent"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfWysiwygComponent" nillable="true" type="tns:ArrayOfWysiwygComponent"/>
      <xs:complexType name="WysiwygComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element xmlns:q2="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="FilterIds" nillable="true" type="q2:ArrayOfguid"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="WysiwygComponent" nillable="true" type="tns:WysiwygComponent"/>
      <xs:complexType name="Chart">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:WysiwygComponent">
            <xs:sequence>
              <xs:element minOccurs="0" name="SeriesInRows" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Distribution" type="tns:DistributionType"/>
              <xs:element minOccurs="0" name="ShowTableTitleAbove" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowTableTitleInside" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Height" type="xs:int"/>
              <xs:element minOccurs="0" name="Width" type="xs:int"/>
              <xs:element minOccurs="0" name="SeriesTextLevels" type="xs:int"/>
              <xs:element minOccurs="0" name="ValuesTextLevels" type="xs:int"/>
              <xs:element minOccurs="0" name="BackColor" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="BackGradientEndColor" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="BackGradientType" type="tns:ChartGradientType"/>
              <xs:element minOccurs="0" name="BorderLineWidth" type="xs:int"/>
              <xs:element minOccurs="0" name="BorderLineColor" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="BorderLineStyle" type="tns:ChartLineStyle"/>
              <xs:element minOccurs="0" name="SoftShadows" type="xs:boolean"/>
              <xs:element minOccurs="0" name="PaletteName" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="Title" nillable="true" type="tns:ChartTitle"/>
              <xs:element minOccurs="0" name="ChartArea" nillable="true" type="tns:ChartArea"/>
              <xs:element minOccurs="0" name="RowHeaderMask" nillable="true" type="tns:HeaderMask"/>
              <xs:element minOccurs="0" name="ColumnHeaderMask" nillable="true" type="tns:HeaderMask"/>
              <xs:element minOccurs="0" name="Legend" nillable="true" type="tns:ChartLegend"/>
              <xs:element minOccurs="0" name="BorderSkin" nillable="true" type="tns:ChartBorderSkin"/>
              <xs:element minOccurs="0" name="AnimationStyle" nillable="true" type="tns:ChartAnimationStyle"/>
              <xs:element minOccurs="0" name="ProportionalSize" nillable="true" type="tns:ChartSizeProportional"/>
              <xs:element minOccurs="0" name="RowContent" nillable="true" type="tns:DimensionContent"/>
              <xs:element minOccurs="0" name="ColumnContent" nillable="true" type="tns:DimensionContent"/>
              <xs:element minOccurs="0" name="Series" nillable="true" type="tns:ChartSeries"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="Chart" nillable="true" type="tns:Chart"/>
      <xs:simpleType name="DistributionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Default"/>
          <xs:enumeration value="Count"/>
          <xs:enumeration value="HorizontalPercent"/>
          <xs:enumeration value="VerticalPercent"/>
          <xs:enumeration value="TablePercent"/>
          <xs:enumeration value="Affinity"/>
          <xs:enumeration value="ChiSquare"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DistributionType" nillable="true" type="tns:DistributionType"/>
      <xs:simpleType name="ChartGradientType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="LeftRight"/>
          <xs:enumeration value="TopBottom"/>
          <xs:enumeration value="Center"/>
          <xs:enumeration value="DiagonalLeft"/>
          <xs:enumeration value="DiagonalRight"/>
          <xs:enumeration value="HorizontalCenter"/>
          <xs:enumeration value="VerticalCenter"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartGradientType" nillable="true" type="tns:ChartGradientType"/>
      <xs:simpleType name="ChartLineStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Dash"/>
          <xs:enumeration value="DashDot"/>
          <xs:enumeration value="DashDotDot"/>
          <xs:enumeration value="Dot"/>
          <xs:enumeration value="Solid"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartLineStyle" nillable="true" type="tns:ChartLineStyle"/>
      <xs:complexType name="ChartTitle">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Title">
            <xs:sequence>
              <xs:element minOccurs="0" name="TitleDocking" type="tns:ChartTitleDockingType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ChartTitle" nillable="true" type="tns:ChartTitle"/>
      <xs:complexType name="Title">
        <xs:sequence>
          <xs:element minOccurs="0" name="Text" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Alignment" type="tns:ChartStringAlignment"/>
          <xs:element minOccurs="0" name="Font" nillable="true" type="tns:Font"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Title" nillable="true" type="tns:Title"/>
      <xs:simpleType name="ChartStringAlignment">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Near"/>
          <xs:enumeration value="Center"/>
          <xs:enumeration value="Far"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartStringAlignment" nillable="true" type="tns:ChartStringAlignment"/>
      <xs:complexType name="Font">
        <xs:sequence>
          <xs:element minOccurs="0" name="Color" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="FamilyName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Size" type="xs:int"/>
          <xs:element minOccurs="0" name="Strikeout" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Style" type="tns:FontStyle"/>
          <xs:element minOccurs="0" name="UnderLine" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Font" nillable="true" type="tns:Font"/>
      <xs:simpleType name="FontStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Regular"/>
          <xs:enumeration value="Bold"/>
          <xs:enumeration value="Italic"/>
          <xs:enumeration value="BoldItalic"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FontStyle" nillable="true" type="tns:FontStyle"/>
      <xs:simpleType name="ChartTitleDockingType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Top"/>
          <xs:enumeration value="Right"/>
          <xs:enumeration value="Bottom"/>
          <xs:enumeration value="Left"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartTitleDockingType" nillable="true" type="tns:ChartTitleDockingType"/>
      <xs:complexType name="ChartArea">
        <xs:sequence>
          <xs:element minOccurs="0" name="Area3DStyle" nillable="true" type="tns:ChartArea3DStyle"/>
          <xs:element minOccurs="0" name="PrimaryAxisX" nillable="true" type="tns:ChartAxisX"/>
          <xs:element minOccurs="0" name="PrimaryAxisY" nillable="true" type="tns:ChartAxis"/>
          <xs:element minOccurs="0" name="SecondaryAxisX" nillable="true" type="tns:ChartAxisX"/>
          <xs:element minOccurs="0" name="SecondaryAxisY" nillable="true" type="tns:ChartAxis"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BackGradientType" type="tns:ChartGradientType"/>
          <xs:element minOccurs="0" name="BackGradientEndColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ShadowColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ShadowOffset" type="xs:int"/>
          <xs:element minOccurs="0" name="BorderColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BorderWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="BorderStyle" type="tns:ChartLineStyle"/>
          <xs:element minOccurs="0" name="ChartType" type="tns:ChartTypes"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartArea" nillable="true" type="tns:ChartArea"/>
      <xs:complexType name="ChartArea3DStyle">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enable3D" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Clustered" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Light" type="tns:ChartLightStyle"/>
          <xs:element minOccurs="0" name="XAngle" type="xs:int"/>
          <xs:element minOccurs="0" name="YAngle" type="xs:int"/>
          <xs:element minOccurs="0" name="WallWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="PointDepth" type="xs:int"/>
          <xs:element minOccurs="0" name="PointGapDepth" type="xs:int"/>
          <xs:element minOccurs="0" name="Perspective" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartArea3DStyle" nillable="true" type="tns:ChartArea3DStyle"/>
      <xs:simpleType name="ChartLightStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Simplistic"/>
          <xs:enumeration value="Realistic"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartLightStyle" nillable="true" type="tns:ChartLightStyle"/>
      <xs:complexType name="ChartAxisX">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ChartAxis">
            <xs:sequence>
              <xs:element minOccurs="0" name="Invert" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ChartAxisX" nillable="true" type="tns:ChartAxisX"/>
      <xs:complexType name="ChartAxis">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="tns:ChartAxisEnabled"/>
          <xs:element minOccurs="0" name="Arrows" type="tns:ChartArrowType"/>
          <xs:element minOccurs="0" name="Title" nillable="true" type="tns:Title"/>
          <xs:element minOccurs="0" name="LineColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="LineWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="LineStyle" type="tns:ChartLineStyle"/>
          <xs:element minOccurs="0" name="LabelsAutoFit" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Maximum" type="xs:double"/>
          <xs:element minOccurs="0" name="Minimum" type="xs:double"/>
          <xs:element minOccurs="0" name="Reverse" type="xs:boolean"/>
          <xs:element minOccurs="0" name="StartFromZero" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Margin" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Crossing" type="xs:double"/>
          <xs:element minOccurs="0" name="MinorGrid" nillable="true" type="tns:ChartGrid"/>
          <xs:element minOccurs="0" name="MinorTickMark" nillable="true" type="tns:ChartMark"/>
          <xs:element minOccurs="0" name="MajorTickMark" nillable="true" type="tns:ChartMark"/>
          <xs:element minOccurs="0" name="LabelStyle" nillable="true" type="tns:ChartLabel"/>
          <xs:element minOccurs="0" name="StripLine" nillable="true" type="tns:ChartStripLine"/>
          <xs:element minOccurs="0" name="MajorGrid" nillable="true" type="tns:ChartGrid"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartAxis" nillable="true" type="tns:ChartAxis"/>
      <xs:simpleType name="ChartAxisEnabled">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Auto"/>
          <xs:enumeration value="True"/>
          <xs:enumeration value="False"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartAxisEnabled" nillable="true" type="tns:ChartAxisEnabled"/>
      <xs:simpleType name="ChartArrowType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Triangle"/>
          <xs:enumeration value="SharpTringle"/>
          <xs:enumeration value="Lines"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartArrowType" nillable="true" type="tns:ChartArrowType"/>
      <xs:complexType name="ChartGrid">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="LineColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="LineStyle" type="tns:ChartLineStyle"/>
          <xs:element minOccurs="0" name="LineWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="Interval" type="xs:double"/>
          <xs:element minOccurs="0" name="IntervalOffset" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartGrid" nillable="true" type="tns:ChartGrid"/>
      <xs:complexType name="ChartMark">
        <xs:sequence>
          <xs:element minOccurs="0" name="Size" type="xs:float"/>
          <xs:element minOccurs="0" name="Style" type="tns:ChartTickMarkStyle"/>
          <xs:element minOccurs="0" name="LineColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="LineStyle" type="tns:ChartLineStyle"/>
          <xs:element minOccurs="0" name="LineWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Interval" type="xs:double"/>
          <xs:element minOccurs="0" name="IntervalOffset" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartMark" nillable="true" type="tns:ChartMark"/>
      <xs:simpleType name="ChartTickMarkStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Outside"/>
          <xs:enumeration value="Inside"/>
          <xs:enumeration value="Cross"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartTickMarkStyle" nillable="true" type="tns:ChartTickMarkStyle"/>
      <xs:complexType name="ChartLabel">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Font" nillable="true" type="tns:Font"/>
          <xs:element minOccurs="0" name="FontAngle" type="xs:int"/>
          <xs:element minOccurs="0" name="Format" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Interval" type="xs:double"/>
          <xs:element minOccurs="0" name="OffsetLabels" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowEndLabels" type="xs:boolean"/>
          <xs:element minOccurs="0" name="IntervalOffset" type="xs:double"/>
          <xs:element minOccurs="0" name="TruncateLabels" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartLabel" nillable="true" type="tns:ChartLabel"/>
      <xs:complexType name="ChartStripLine">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="IntervalOffset" type="xs:double"/>
          <xs:element minOccurs="0" name="Interval" type="xs:double"/>
          <xs:element minOccurs="0" name="StripWidth" type="xs:double"/>
          <xs:element minOccurs="0" name="BorderColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BorderStyle" type="tns:ChartLineStyle"/>
          <xs:element minOccurs="0" name="BorderWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="BackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BackGradientEndColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BackGradientType" type="tns:ChartGradientType"/>
          <xs:element minOccurs="0" name="BackHatchStyle" type="tns:ChartHatchStyle"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartStripLine" nillable="true" type="tns:ChartStripLine"/>
      <xs:simpleType name="ChartHatchStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="BackwardDiagonal"/>
          <xs:enumeration value="Cross"/>
          <xs:enumeration value="DashedHorizontal">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">8</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DashedVertical">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">10</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DiagonalBrick">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">11</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DiagonalCross">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">12</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Divot">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">13</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ForwardDiagonal">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">16</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Horizontal">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">17</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="HorizontalBrick">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">18</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OutlinedDiamond">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">28</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Shingle">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">42</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Vertical">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">49</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ZigZag">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">54</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartHatchStyle" nillable="true" type="tns:ChartHatchStyle"/>
      <xs:simpleType name="ChartTypes">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Area"/>
          <xs:enumeration value="Bar"/>
          <xs:enumeration value="Column"/>
          <xs:enumeration value="Doughnut"/>
          <xs:enumeration value="Line"/>
          <xs:enumeration value="Pareto"/>
          <xs:enumeration value="Pie"/>
          <xs:enumeration value="Point"/>
          <xs:enumeration value="Spline"/>
          <xs:enumeration value="SplineArea"/>
          <xs:enumeration value="StackedArea"/>
          <xs:enumeration value="StackedArea100"/>
          <xs:enumeration value="StackedBar"/>
          <xs:enumeration value="StackedBar100"/>
          <xs:enumeration value="StackedColumn"/>
          <xs:enumeration value="StackedColumn100"/>
          <xs:enumeration value="StepLine"/>
          <xs:enumeration value="Radar"/>
          <xs:enumeration value="XYPlot"/>
          <xs:enumeration value="Bubble"/>
          <xs:enumeration value="VerticalLine"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartTypes" nillable="true" type="tns:ChartTypes"/>
      <xs:complexType name="HeaderMask">
        <xs:sequence>
          <xs:element xmlns:q3="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="MaskedHeaders" nillable="true" type="q3:ArrayOfanyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="HeaderMask" nillable="true" type="tns:HeaderMask"/>
      <xs:complexType name="ChartLegend">
        <xs:sequence>
          <xs:element minOccurs="0" name="AutoFitText" type="xs:boolean"/>
          <xs:element minOccurs="0" name="LegendStyle" type="tns:ChartLegendStyle"/>
          <xs:element minOccurs="0" name="BackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BorderStyle" type="tns:ChartLineStyle"/>
          <xs:element minOccurs="0" name="BorderColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BorderWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="BackGradientType" type="tns:ChartGradientType"/>
          <xs:element minOccurs="0" name="BackGradientEndColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Font" nillable="true" type="tns:Font"/>
          <xs:element minOccurs="0" name="Alignment" type="tns:ChartStringAlignment"/>
          <xs:element minOccurs="0" name="Docking" type="tns:ChartLegendDocking"/>
          <xs:element minOccurs="0" name="ShadowOffset" type="xs:int"/>
          <xs:element minOccurs="0" name="ShadowColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="InsideChartArea" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartLegend" nillable="true" type="tns:ChartLegend"/>
      <xs:simpleType name="ChartLegendStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Column"/>
          <xs:enumeration value="Row"/>
          <xs:enumeration value="Table"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartLegendStyle" nillable="true" type="tns:ChartLegendStyle"/>
      <xs:simpleType name="ChartLegendDocking">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Top"/>
          <xs:enumeration value="Right"/>
          <xs:enumeration value="Bottom"/>
          <xs:enumeration value="Left"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartLegendDocking" nillable="true" type="tns:ChartLegendDocking"/>
      <xs:complexType name="ChartBorderSkin">
        <xs:sequence>
          <xs:element minOccurs="0" name="PageColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SkinStyle" type="tns:ChartBorderSkinStyle"/>
          <xs:element minOccurs="0" name="FrameBackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="FrameBorderColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="FrameBackGradientType" type="tns:ChartGradientType"/>
          <xs:element minOccurs="0" name="FrameBackGradientEndColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="FrameBorderWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="FrameBorderStyle" type="tns:ChartLineStyle"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartBorderSkin" nillable="true" type="tns:ChartBorderSkin"/>
      <xs:simpleType name="ChartBorderSkinStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Emboss"/>
          <xs:enumeration value="Raised"/>
          <xs:enumeration value="Sunken"/>
          <xs:enumeration value="FrameThin1"/>
          <xs:enumeration value="FrameThin2"/>
          <xs:enumeration value="FrameThin3"/>
          <xs:enumeration value="FrameThin4"/>
          <xs:enumeration value="FrameThin5"/>
          <xs:enumeration value="FrameThin6"/>
          <xs:enumeration value="FrameTitle1"/>
          <xs:enumeration value="FrameTitle2"/>
          <xs:enumeration value="FrameTitle3"/>
          <xs:enumeration value="FrameTitle4"/>
          <xs:enumeration value="FrameTitle5"/>
          <xs:enumeration value="FrameTitle6"/>
          <xs:enumeration value="FrameTitle7"/>
          <xs:enumeration value="FrameTitle8"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartBorderSkinStyle" nillable="true" type="tns:ChartBorderSkinStyle"/>
      <xs:complexType name="ChartAnimationStyle">
        <xs:sequence>
          <xs:element minOccurs="0" name="EnableAnimation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AnimationStartTime" type="xs:double"/>
          <xs:element minOccurs="0" name="AnimationDuration" type="xs:double"/>
          <xs:element minOccurs="0" name="RepeatAnimation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="RepeatDelay" type="xs:double"/>
          <xs:element minOccurs="0" name="AnimationTheme" type="tns:ChartAnimationTheme"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartAnimationStyle" nillable="true" type="tns:ChartAnimationStyle"/>
      <xs:simpleType name="ChartAnimationTheme">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="GrowingTogether"/>
          <xs:enumeration value="Fading"/>
          <xs:enumeration value="GrowingAndFading">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">5</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GrowingOneByOne">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">3</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MovingFromTop">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">4</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartAnimationTheme" nillable="true" type="tns:ChartAnimationTheme"/>
      <xs:complexType name="ChartSizeProportional">
        <xs:sequence>
          <xs:element minOccurs="0" name="Width" nillable="true" type="tns:ProportionalSize"/>
          <xs:element minOccurs="0" name="Height" nillable="true" type="tns:ProportionalSize"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartSizeProportional" nillable="true" type="tns:ChartSizeProportional"/>
      <xs:complexType name="ProportionalSize">
        <xs:sequence>
          <xs:element minOccurs="0" name="Proportion" type="tns:ProportionType"/>
          <xs:element minOccurs="0" name="Factor" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ProportionalSize" nillable="true" type="tns:ProportionalSize"/>
      <xs:simpleType name="ProportionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Fixed"/>
          <xs:enumeration value="RowProportion"/>
          <xs:enumeration value="ColumnProportion"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ProportionType" nillable="true" type="tns:ProportionType"/>
      <xs:complexType name="DimensionContent">
        <xs:sequence>
          <xs:element minOccurs="0" name="DistributionCodeMask" nillable="true" type="tns:ChartDistributionCodeMask"/>
          <xs:element minOccurs="0" name="Categories" nillable="true" type="tns:ChartCategories"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DimensionContent" nillable="true" type="tns:DimensionContent"/>
      <xs:complexType name="ChartDistributionCodeMask">
        <xs:sequence>
          <xs:element minOccurs="0" name="Type" type="tns:MaskType"/>
          <xs:element minOccurs="0" name="Codes" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartDistributionCodeMask" nillable="true" type="tns:ChartDistributionCodeMask"/>
      <xs:simpleType name="MaskType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ShowAll"/>
          <xs:enumeration value="HideAll"/>
          <xs:enumeration value="ShowCodes"/>
          <xs:enumeration value="HideCodes"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="MaskType" nillable="true" type="tns:MaskType"/>
      <xs:complexType name="ChartCategories">
        <xs:sequence>
          <xs:element minOccurs="0" name="Benchmark" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Total" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Distribution" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Categorization" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Measure" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Formula" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Base" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Segment" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Statistics" nillable="true" type="tns:ChartCategoriesStatistic"/>
          <xs:element minOccurs="0" name="Hierarchy" nillable="true" type="tns:ChartCategoriesHierarchy"/>
          <xs:element minOccurs="0" name="Nets" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Correlation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="TotalMentions" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartCategories" nillable="true" type="tns:ChartCategories"/>
      <xs:complexType name="ChartCategoriesStatistic">
        <xs:sequence>
          <xs:element minOccurs="0" name="Average" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Deviation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Variance" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Count" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Min" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Max" type="xs:boolean"/>
          <xs:element minOccurs="0" name="StdError" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Median" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Mode" type="xs:boolean"/>
          <xs:element minOccurs="0" name="WeightedMedian" type="xs:boolean"/>
          <xs:element minOccurs="0" name="WeightedMode" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartCategoriesStatistic" nillable="true" type="tns:ChartCategoriesStatistic"/>
      <xs:complexType name="ChartCategoriesHierarchy">
        <xs:sequence>
          <xs:element minOccurs="0" name="Self" type="xs:boolean"/>
          <xs:element minOccurs="0" name="SelfExclusive" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Parent" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Sibling" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Child" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartCategoriesHierarchy" nillable="true" type="tns:ChartCategoriesHierarchy"/>
      <xs:complexType name="ChartSeries">
        <xs:sequence>
          <xs:element minOccurs="0" name="SeriesDefault" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="SeriesByCategory" nillable="true" type="tns:ChartCategorySeries"/>
          <xs:element minOccurs="0" name="SeriesByPosition" nillable="true" type="tns:PositionLayouts"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartSeries" nillable="true" type="tns:ChartSeries"/>
      <xs:complexType name="ChartSeriesLayout">
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ToolTip" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ChartType" type="tns:ChartTypes"/>
          <xs:element minOccurs="0" name="XAxisType" type="tns:AxisType"/>
          <xs:element minOccurs="0" name="YAxisType" type="tns:AxisType"/>
          <xs:element minOccurs="0" name="YValuesPerPoint" type="xs:int"/>
          <xs:element minOccurs="0" name="MarkerStep" type="xs:int"/>
          <xs:element minOccurs="0" name="ChartArea" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Label" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ShowLabelAsValue" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowLabelAsSeriesName" type="xs:boolean"/>
          <xs:element minOccurs="0" name="MarkerStyle" type="tns:ChartMarkerStyle"/>
          <xs:element minOccurs="0" name="MarkerSize" type="xs:int"/>
          <xs:element minOccurs="0" name="MarkerColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="MarkerBorderColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="LegendText" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="LegendToolTip" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Font" nillable="true" type="tns:Font"/>
          <xs:element minOccurs="0" name="BackGradientType" type="tns:ChartGradientType"/>
          <xs:element minOccurs="0" name="BackGradientEndColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BorderStyle" type="tns:ChartLineStyle"/>
          <xs:element minOccurs="0" name="BorderColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BorderWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="FontAngle" type="xs:int"/>
          <xs:element minOccurs="0" name="ShadowColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ShadowOffset" type="xs:int"/>
          <xs:element minOccurs="0" name="SeriesColorTransparency" type="xs:int"/>
          <xs:element minOccurs="0" name="IsInUse" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AreaDrawingStyle" type="tns:ChartAreaDrawingStyle"/>
          <xs:element minOccurs="0" name="RadarDrawingStyle" type="tns:ChartRadarDrawingStyle"/>
          <xs:element minOccurs="0" name="CircularLabelsStyle" type="tns:ChartCircularLabelsStyle"/>
          <xs:element minOccurs="0" name="SmartLabelsStyle" nillable="true" type="tns:ChartSmartLabelsStyle"/>
          <xs:element minOccurs="0" name="ColumnX" type="xs:int"/>
          <xs:element minOccurs="0" name="ColumnY" type="xs:int"/>
          <xs:element minOccurs="0" name="ColumnZ" type="xs:int"/>
          <xs:element minOccurs="0" name="ChartLabelStyle" nillable="true" type="tns:ChartLabelStyle"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartSeriesLayout" nillable="true" type="tns:ChartSeriesLayout"/>
      <xs:simpleType name="AxisType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Primary"/>
          <xs:enumeration value="Secondary"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="AxisType" nillable="true" type="tns:AxisType"/>
      <xs:simpleType name="ChartMarkerStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Square"/>
          <xs:enumeration value="Circle"/>
          <xs:enumeration value="Diamond"/>
          <xs:enumeration value="Triangle"/>
          <xs:enumeration value="Cross"/>
          <xs:enumeration value="Star4"/>
          <xs:enumeration value="Star5"/>
          <xs:enumeration value="Star6"/>
          <xs:enumeration value="Star10"/>
          <xs:enumeration value="Auto">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">99</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartMarkerStyle" nillable="true" type="tns:ChartMarkerStyle"/>
      <xs:simpleType name="ChartAreaDrawingStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Circle"/>
          <xs:enumeration value="Polygon"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartAreaDrawingStyle" nillable="true" type="tns:ChartAreaDrawingStyle"/>
      <xs:simpleType name="ChartRadarDrawingStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Area"/>
          <xs:enumeration value="Line"/>
          <xs:enumeration value="Marker"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartRadarDrawingStyle" nillable="true" type="tns:ChartRadarDrawingStyle"/>
      <xs:simpleType name="ChartCircularLabelsStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Circular"/>
          <xs:enumeration value="Horizontal"/>
          <xs:enumeration value="Radial"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartCircularLabelsStyle" nillable="true" type="tns:ChartCircularLabelsStyle"/>
      <xs:complexType name="ChartSmartLabelsStyle">
        <xs:sequence>
          <xs:element minOccurs="0" name="IsAllSeries" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AllowOutsidePlotArea" type="tns:ChartLabelOutsidePlotAreaStyle"/>
          <xs:element minOccurs="0" name="CalloutStyle" type="tns:ChartLabelCalloutStyle"/>
          <xs:element minOccurs="0" name="CalloutBackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="CalloutLineColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="CalloutLineAnchorCap" type="tns:ChartLineAnchorCap"/>
          <xs:element minOccurs="0" name="CalloutLineWidth" type="xs:int"/>
          <xs:element minOccurs="0" name="HideOverlapped" type="xs:boolean"/>
          <xs:element minOccurs="0" name="MarkerOverlapping" type="xs:boolean"/>
          <xs:element minOccurs="0" name="MaxMovingDistance" type="xs:double"/>
          <xs:element minOccurs="0" name="MinMovingDistance" type="xs:double"/>
          <xs:element minOccurs="0" name="MovingDirections" type="tns:ChartMovingDirection"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartSmartLabelsStyle" nillable="true" type="tns:ChartSmartLabelsStyle"/>
      <xs:simpleType name="ChartLabelOutsidePlotAreaStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Yes"/>
          <xs:enumeration value="No"/>
          <xs:enumeration value="Partial"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartLabelOutsidePlotAreaStyle" nillable="true" type="tns:ChartLabelOutsidePlotAreaStyle"/>
      <xs:simpleType name="ChartLabelCalloutStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Underline"/>
          <xs:enumeration value="Box"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartLabelCalloutStyle" nillable="true" type="tns:ChartLabelCalloutStyle"/>
      <xs:simpleType name="ChartLineAnchorCap">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Arrow"/>
          <xs:enumeration value="Diamond"/>
          <xs:enumeration value="Square"/>
          <xs:enumeration value="Round"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartLineAnchorCap" nillable="true" type="tns:ChartLineAnchorCap"/>
      <xs:simpleType name="ChartMovingDirection">
        <xs:restriction base="xs:string">
          <xs:enumeration value="TopLeft">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">16</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Top"/>
          <xs:enumeration value="TopRight">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">32</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Right">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">4</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BottomRight">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">128</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Bottom">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BottomLeft">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">64</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Left">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">8</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Center">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">256</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Auto">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">255</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartMovingDirection" nillable="true" type="tns:ChartMovingDirection"/>
      <xs:complexType name="ChartLabelStyle">
        <xs:sequence>
          <xs:element minOccurs="0" name="General" type="tns:GeneralChartLabelStyle"/>
          <xs:element minOccurs="0" name="Bar" type="tns:BarChartLabelStyle"/>
          <xs:element minOccurs="0" name="Pie" type="tns:PieChartLabelStyle"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartLabelStyle" nillable="true" type="tns:ChartLabelStyle"/>
      <xs:simpleType name="GeneralChartLabelStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Auto"/>
          <xs:enumeration value="Top"/>
          <xs:enumeration value="Bottom"/>
          <xs:enumeration value="Right"/>
          <xs:enumeration value="Left"/>
          <xs:enumeration value="TopLeft"/>
          <xs:enumeration value="TopRight"/>
          <xs:enumeration value="BottomLeft"/>
          <xs:enumeration value="BottomRight"/>
          <xs:enumeration value="Center"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="GeneralChartLabelStyle" nillable="true" type="tns:GeneralChartLabelStyle"/>
      <xs:simpleType name="BarChartLabelStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Outside"/>
          <xs:enumeration value="Left"/>
          <xs:enumeration value="Right"/>
          <xs:enumeration value="Center"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="BarChartLabelStyle" nillable="true" type="tns:BarChartLabelStyle"/>
      <xs:simpleType name="PieChartLabelStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Inside"/>
          <xs:enumeration value="Disabled"/>
          <xs:enumeration value="Outside"/>
          <xs:enumeration value="Ellipse"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="PieChartLabelStyle" nillable="true" type="tns:PieChartLabelStyle"/>
      <xs:complexType name="ChartCategorySeries">
        <xs:sequence>
          <xs:element minOccurs="0" name="Benchmark" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Total" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Distribution" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Categorization" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Measure" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Statistics" nillable="true" type="tns:ChartCategorySeriesStatistics"/>
          <xs:element minOccurs="0" name="Hierarchy" nillable="true" type="tns:ChartCategorySeriesHierarchy"/>
          <xs:element minOccurs="0" name="Formula" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Base" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Segment" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Correlation" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Nets" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="TotalMentions" nillable="true" type="tns:ChartSeriesLayout"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartCategorySeries" nillable="true" type="tns:ChartCategorySeries"/>
      <xs:complexType name="ChartCategorySeriesStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="Average" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Deviation" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Variance" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Count" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Max" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Min" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Mode" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Median" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="StdError" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="WeightedMedian" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="WeightedMode" nillable="true" type="tns:ChartSeriesLayout"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartCategorySeriesStatistics" nillable="true" type="tns:ChartCategorySeriesStatistics"/>
      <xs:complexType name="ChartCategorySeriesHierarchy">
        <xs:sequence>
          <xs:element minOccurs="0" name="Self" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Parent" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Sibling" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="Child" nillable="true" type="tns:ChartSeriesLayout"/>
          <xs:element minOccurs="0" name="SelfExclusive" nillable="true" type="tns:ChartSeriesLayout"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartCategorySeriesHierarchy" nillable="true" type="tns:ChartCategorySeriesHierarchy"/>
      <xs:complexType name="PositionLayouts">
        <xs:sequence>
          <xs:element minOccurs="0" name="Layouts" nillable="true" type="tns:ArrayOfChartSeriesPositionLayout"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="PositionLayouts" nillable="true" type="tns:PositionLayouts"/>
      <xs:complexType name="ArrayOfChartSeriesPositionLayout">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ChartSeriesPositionLayout" nillable="true" type="tns:ChartSeriesPositionLayout"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfChartSeriesPositionLayout" nillable="true" type="tns:ArrayOfChartSeriesPositionLayout"/>
      <xs:complexType name="ChartSeriesPositionLayout">
        <xs:sequence>
          <xs:element minOccurs="0" name="Position" type="xs:int"/>
          <xs:element minOccurs="0" name="IsFromStart" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ChartSeriesLayout" nillable="true" type="tns:ChartSeriesLayout"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartSeriesPositionLayout" nillable="true" type="tns:ChartSeriesPositionLayout"/>
      <xs:complexType name="Table">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:WysiwygComponent">
            <xs:sequence>
              <xs:element minOccurs="0" name="Style" nillable="true" type="tns:AggregatedTableStyle"/>
              <xs:element minOccurs="0" name="ColumnHeaders" nillable="true" type="tns:HeaderCollection"/>
              <xs:element minOccurs="0" name="RowHeaders" nillable="true" type="tns:HeaderCollection"/>
              <xs:element minOccurs="0" name="DataDimension" nillable="true" type="tns:HeaderCollection"/>
              <xs:element minOccurs="0" name="PersonalizedFilterActive" type="tns:PersonalizedFilterStatus"/>
              <xs:element minOccurs="0" name="TableWeightModelId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="DataSetId" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="Table" nillable="true" type="tns:Table"/>
      <xs:complexType name="AggregatedTableStyle">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportComponentStyle">
            <xs:sequence>
              <xs:element minOccurs="0" name="SignificanceTestSettings" nillable="true" type="tns:SignificanceTestSettings"/>
              <xs:element minOccurs="0" name="TableMetaData" nillable="true" type="tns:TableMetaDataSettings"/>
              <xs:element minOccurs="0" name="Layout" nillable="true" type="tns:AggregatedTableStyleLayout"/>
              <xs:element minOccurs="0" name="Distribution" nillable="true" type="tns:DistributionFormat"/>
              <xs:element minOccurs="0" name="Decimals" type="xs:int"/>
              <xs:element minOccurs="0" name="NumberFormatting" nillable="true" type="tns:NumberFormat"/>
              <xs:element minOccurs="0" name="Use1000Separator" type="xs:boolean"/>
              <xs:element minOccurs="0" name="UnweightedBase" type="xs:boolean"/>
              <xs:element minOccurs="0" name="TotalsFirst" type="xs:boolean"/>
              <xs:element minOccurs="0" name="RowHeaderNesting" type="tns:RowNestingType"/>
              <xs:element minOccurs="0" name="Base" type="tns:BaseType"/>
              <xs:element minOccurs="0" name="HideEmptyHeaders" nillable="true" type="tns:RemoveEmptyHeaders"/>
              <xs:element minOccurs="0" name="HideData" nillable="true" type="tns:CellHiding"/>
              <xs:element minOccurs="0" name="DataDimensionPosition" type="tns:DataDimensionPositionType"/>
              <xs:element minOccurs="0" name="ShowBarCharts" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Sorting" nillable="true" type="tns:TableSorting"/>
              <xs:element minOccurs="0" name="RowHeaderWidth" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="ColumnHeaderWidth" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="PersonalAnswers" nillable="true" type="tns:PersonalAnswerIndicator"/>
              <xs:element minOccurs="0" name="Title" nillable="true" type="tns:TableTitle"/>
              <xs:element minOccurs="0" name="Drilling" nillable="true" type="tns:TableDrilldown"/>
              <xs:element minOccurs="0" name="HeaderSettings" nillable="true" type="tns:DefaultHeaderSettings"/>
              <xs:element minOccurs="0" name="UpperLevel" nillable="true" type="tns:TableUpperLevelComparison"/>
              <xs:element minOccurs="0" name="ConditionalFormattingSettings" nillable="true" type="tns:ConditionalFormatting"/>
              <xs:element minOccurs="0" name="UseRespondentData" type="xs:boolean"/>
              <xs:element minOccurs="0" name="RoundingOfValuesInExpressions" type="tns:RoundingOfValuesInExpressionsType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="AggregatedTableStyle" nillable="true" type="tns:AggregatedTableStyle"/>
      <xs:complexType name="ReportComponentStyle">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ComponentStyle">
            <xs:sequence>
              <xs:element minOccurs="0" name="Id" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportComponentStyle" nillable="true" type="tns:ReportComponentStyle"/>
      <xs:complexType name="ComponentStyle">
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="IsDefault" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ComponentStyle" nillable="true" type="tns:ComponentStyle"/>
      <xs:complexType name="SignificanceTestSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="SignificanceTesting" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ConfidenceLevel" type="tns:ConfidenceLevel"/>
          <xs:element minOccurs="0" name="SignificantCellColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Chi2PositiveColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Chi2NegativeColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TestType" type="tns:SignificanceTestType"/>
          <xs:element minOccurs="0" name="Chi2Threshold1" type="xs:double"/>
          <xs:element minOccurs="0" name="Chi2Threshold2" type="xs:double"/>
          <xs:element minOccurs="0" name="Chi2Threshold3" type="xs:double"/>
          <xs:element minOccurs="0" name="Chi2Threshold4" type="xs:double"/>
          <xs:element minOccurs="0" name="Chi2Threshold5" type="xs:double"/>
          <xs:element minOccurs="0" name="SecondConfidenceLevel" type="tns:ConfidenceLevel"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="SignificanceTestSettings" nillable="true" type="tns:SignificanceTestSettings"/>
      <xs:simpleType name="ConfidenceLevel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Eighty"/>
          <xs:enumeration value="Ninety"/>
          <xs:enumeration value="NinetyFive"/>
          <xs:enumeration value="NinetyEight"/>
          <xs:enumeration value="NinetyNine"/>
          <xs:enumeration value="NinetyNinePointEight"/>
          <xs:enumeration value="Empty"/>
          <xs:enumeration value="Custom"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ConfidenceLevel" nillable="true" type="tns:ConfidenceLevel"/>
      <xs:simpleType name="SignificanceTestType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="TTest"/>
          <xs:enumeration value="ChiSquare"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="SignificanceTestType" nillable="true" type="tns:SignificanceTestType"/>
      <xs:complexType name="TableMetaDataSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="ShowTableTimestamp" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowTableWeightModel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowTableStyle" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowTableSignificanceTestColumns" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowTableFilters" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowSupressData" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowBenchmark" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ShowDistribution" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="TableMetaDataSettings" nillable="true" type="tns:TableMetaDataSettings"/>
      <xs:complexType name="AggregatedTableStyleLayout">
        <xs:sequence>
          <xs:element minOccurs="0" name="TableTagStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="RowTagStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="DefaultCellStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="HeaderCellStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="HeaderLineCellStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="DataCellStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="HeaderTotalCellStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="DataTotalCellStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="HtmlStyles" nillable="true" type="tns:AggregatedTableLayoutHtmlStyles"/>
          <xs:element minOccurs="0" name="RowHeaderCellStyle" nillable="true" type="tns:CSSStyle"/>
          <xs:element minOccurs="0" name="ColumnHeaderCellStyle" nillable="true" type="tns:CSSStyle"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="AggregatedTableStyleLayout" nillable="true" type="tns:AggregatedTableStyleLayout"/>
      <xs:complexType name="CSSStyle">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Font" nillable="true" type="tns:CSSStyleFont"/>
          <xs:element minOccurs="0" name="Background" nillable="true" type="tns:CSSStyleBackground"/>
          <xs:element minOccurs="0" name="Text" nillable="true" type="tns:CSSStyleText"/>
          <xs:element minOccurs="0" name="Edges" nillable="true" type="tns:CSSStyleEdges"/>
          <xs:element minOccurs="0" name="Tables" nillable="true" type="tns:CSSStyleTables"/>
          <xs:element minOccurs="0" name="Lists" nillable="true" type="tns:CSSStyleLists"/>
          <xs:element minOccurs="0" name="Layout" nillable="true" type="tns:CSSStyleLayout"/>
          <xs:element minOccurs="0" name="Position" nillable="true" type="tns:CSSStylePosition"/>
          <xs:element minOccurs="0" name="NativeCssItems" nillable="true" type="tns:ArrayOfCSSStyleItem"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyle" nillable="true" type="tns:CSSStyle"/>
      <xs:complexType name="CSSStyleFont">
        <xs:sequence>
          <xs:element minOccurs="0" name="Family" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Color" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Italic" type="tns:ItalicType"/>
          <xs:element minOccurs="0" name="SmallCaps" type="tns:SmallCapsType"/>
          <xs:element minOccurs="0" name="Bold" type="tns:BoldType"/>
          <xs:element minOccurs="0" name="Size" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Underline" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Strikethrough" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Overline" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleFont" nillable="true" type="tns:CSSStyleFont"/>
      <xs:simpleType name="ItalicType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="Italic"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ItalicType" nillable="true" type="tns:ItalicType"/>
      <xs:simpleType name="SmallCapsType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="SmallCaps"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="SmallCapsType" nillable="true" type="tns:SmallCapsType"/>
      <xs:simpleType name="BoldType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="Bold"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="BoldType" nillable="true" type="tns:BoldType"/>
      <xs:complexType name="CSSStyleBackground">
        <xs:sequence>
          <xs:element minOccurs="0" name="Color" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Image" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BackgroundPosition" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BackgroundAttachment" type="tns:CSSStyleBackgroundAttachment"/>
          <xs:element minOccurs="0" name="BackgroundRepeat" type="tns:CSSStyleBackgroundRepeat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleBackground" nillable="true" type="tns:CSSStyleBackground"/>
      <xs:simpleType name="CSSStyleBackgroundAttachment">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Fixed"/>
          <xs:enumeration value="Inherit"/>
          <xs:enumeration value="Scroll"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleBackgroundAttachment" nillable="true" type="tns:CSSStyleBackgroundAttachment"/>
      <xs:simpleType name="CSSStyleBackgroundRepeat">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Inherit"/>
          <xs:enumeration value="NoRepeat"/>
          <xs:enumeration value="Repeat"/>
          <xs:enumeration value="RepeatX"/>
          <xs:enumeration value="RepeatY"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleBackgroundRepeat" nillable="true" type="tns:CSSStyleBackgroundRepeat"/>
      <xs:complexType name="CSSStyleText">
        <xs:sequence>
          <xs:element minOccurs="0" name="LetterSpacing" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TextIndent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="WordSpacing" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TextTransform" type="tns:CSSStyleTextTransform"/>
          <xs:element minOccurs="0" name="WhiteSpace" type="tns:CSSStyleWhiteSpace"/>
          <xs:element minOccurs="0" name="VerticalAlignment" type="tns:VerticalAlignmentType"/>
          <xs:element minOccurs="0" name="HorizontalAlignment" type="tns:HorizontalAlignmentType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleText" nillable="true" type="tns:CSSStyleText"/>
      <xs:simpleType name="CSSStyleTextTransform">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="None"/>
          <xs:enumeration value="Inherit"/>
          <xs:enumeration value="Capitalize"/>
          <xs:enumeration value="Lowercase"/>
          <xs:enumeration value="Uppercase"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleTextTransform" nillable="true" type="tns:CSSStyleTextTransform"/>
      <xs:simpleType name="CSSStyleWhiteSpace">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="Inherit"/>
          <xs:enumeration value="NoWrap"/>
          <xs:enumeration value="Pre"/>
          <xs:enumeration value="PreLine"/>
          <xs:enumeration value="PreWrap"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleWhiteSpace" nillable="true" type="tns:CSSStyleWhiteSpace"/>
      <xs:simpleType name="VerticalAlignmentType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Subscript"/>
          <xs:enumeration value="Superscript"/>
          <xs:enumeration value="Normal"/>
          <xs:enumeration value="Top"/>
          <xs:enumeration value="Middle"/>
          <xs:enumeration value="Bottom"/>
          <xs:enumeration value="TextTop"/>
          <xs:enumeration value="TextBottom"/>
          <xs:enumeration value="Baseline"/>
          <xs:enumeration value="Inherit"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="VerticalAlignmentType" nillable="true" type="tns:VerticalAlignmentType"/>
      <xs:simpleType name="HorizontalAlignmentType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Left"/>
          <xs:enumeration value="Centered"/>
          <xs:enumeration value="Right"/>
          <xs:enumeration value="Justified"/>
          <xs:enumeration value="Inherit"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="HorizontalAlignmentType" nillable="true" type="tns:HorizontalAlignmentType"/>
      <xs:complexType name="CSSStyleEdges">
        <xs:sequence>
          <xs:element minOccurs="0" name="Margins" nillable="true" type="tns:CSSStyleEdgesMargins"/>
          <xs:element minOccurs="0" name="Padding" nillable="true" type="tns:CSSStyleEdgesPadding"/>
          <xs:element minOccurs="0" name="Borders" nillable="true" type="tns:CSSStyleEdgesBorders"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleEdges" nillable="true" type="tns:CSSStyleEdges"/>
      <xs:complexType name="CSSStyleEdgesMargins">
        <xs:sequence>
          <xs:element minOccurs="0" name="Top" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Bottom" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Left" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Right" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleEdgesMargins" nillable="true" type="tns:CSSStyleEdgesMargins"/>
      <xs:complexType name="CSSStyleEdgesPadding">
        <xs:sequence>
          <xs:element minOccurs="0" name="Top" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Bottom" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Left" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Right" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleEdgesPadding" nillable="true" type="tns:CSSStyleEdgesPadding"/>
      <xs:complexType name="CSSStyleEdgesBorders">
        <xs:sequence>
          <xs:element minOccurs="0" name="All" nillable="true" type="tns:CSSStyleEdgesBorder"/>
          <xs:element minOccurs="0" name="Top" nillable="true" type="tns:CSSStyleEdgesBorder"/>
          <xs:element minOccurs="0" name="Bottom" nillable="true" type="tns:CSSStyleEdgesBorder"/>
          <xs:element minOccurs="0" name="Left" nillable="true" type="tns:CSSStyleEdgesBorder"/>
          <xs:element minOccurs="0" name="Right" nillable="true" type="tns:CSSStyleEdgesBorder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleEdgesBorders" nillable="true" type="tns:CSSStyleEdgesBorders"/>
      <xs:complexType name="CSSStyleEdgesBorder">
        <xs:sequence>
          <xs:element minOccurs="0" name="Style" type="tns:CSSStyleEdgesBorderStyleType"/>
          <xs:element minOccurs="0" name="Width" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Color" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleEdgesBorder" nillable="true" type="tns:CSSStyleEdgesBorder"/>
      <xs:simpleType name="CSSStyleEdgesBorderStyleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="SolidLine"/>
          <xs:enumeration value="DoubleLine"/>
          <xs:enumeration value="Groove"/>
          <xs:enumeration value="Ridge"/>
          <xs:enumeration value="Inset"/>
          <xs:enumeration value="Outset"/>
          <xs:enumeration value="Inherit"/>
          <xs:enumeration value="Dashed"/>
          <xs:enumeration value="Dotted"/>
          <xs:enumeration value="Hidden"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleEdgesBorderStyleType" nillable="true" type="tns:CSSStyleEdgesBorderStyleType"/>
      <xs:complexType name="CSSStyleTables">
        <xs:sequence>
          <xs:element minOccurs="0" name="Filter" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Borders" type="tns:CSSStyleTablesBorderType"/>
          <xs:element minOccurs="0" name="TableLayout" type="tns:CSSStyleTablesLayoutType"/>
          <xs:element minOccurs="0" name="Cursor" type="tns:CSSStyleCursor"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleTables" nillable="true" type="tns:CSSStyleTables"/>
      <xs:simpleType name="CSSStyleTablesBorderType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Separate"/>
          <xs:enumeration value="Collapse"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleTablesBorderType" nillable="true" type="tns:CSSStyleTablesBorderType"/>
      <xs:simpleType name="CSSStyleTablesLayoutType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Auto"/>
          <xs:enumeration value="Fixed"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleTablesLayoutType" nillable="true" type="tns:CSSStyleTablesLayoutType"/>
      <xs:simpleType name="CSSStyleCursor">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Auto"/>
          <xs:enumeration value="Crosshair"/>
          <xs:enumeration value="Default"/>
          <xs:enumeration value="Help"/>
          <xs:enumeration value="Move"/>
          <xs:enumeration value="Pointer"/>
          <xs:enumeration value="ResizeUp"/>
          <xs:enumeration value="ResizeDown"/>
          <xs:enumeration value="ResizeLeft"/>
          <xs:enumeration value="ResizeRight"/>
          <xs:enumeration value="ResizeDownRight"/>
          <xs:enumeration value="ResizeDownLeft"/>
          <xs:enumeration value="ResizeUpRight"/>
          <xs:enumeration value="ResizeUpLeft"/>
          <xs:enumeration value="Text"/>
          <xs:enumeration value="Wait"/>
          <xs:enumeration value="Inherit"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleCursor" nillable="true" type="tns:CSSStyleCursor"/>
      <xs:complexType name="CSSStyleLists">
        <xs:sequence>
          <xs:element minOccurs="0" name="ImageUrl" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Position" type="tns:CSSStyleListsPosition"/>
          <xs:element minOccurs="0" name="Type" type="tns:CSSStyleListsType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleLists" nillable="true" type="tns:CSSStyleLists"/>
      <xs:simpleType name="CSSStyleListsPosition">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Inside"/>
          <xs:enumeration value="Outside"/>
          <xs:enumeration value="Inherit"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleListsPosition" nillable="true" type="tns:CSSStyleListsPosition"/>
      <xs:simpleType name="CSSStyleListsType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="None"/>
          <xs:enumeration value="Armenian"/>
          <xs:enumeration value="Circle"/>
          <xs:enumeration value="ChkIdeographic"/>
          <xs:enumeration value="Decimal"/>
          <xs:enumeration value="DecimalLeadingZero"/>
          <xs:enumeration value="Disc"/>
          <xs:enumeration value="Georgian"/>
          <xs:enumeration value="Hebrew"/>
          <xs:enumeration value="Hiragana"/>
          <xs:enumeration value="HiraganaIroha"/>
          <xs:enumeration value="Katakana"/>
          <xs:enumeration value="KatakanaIroha"/>
          <xs:enumeration value="LowerAlpha"/>
          <xs:enumeration value="LowerGreek"/>
          <xs:enumeration value="LowerLatin"/>
          <xs:enumeration value="LowerRoman"/>
          <xs:enumeration value="Square"/>
          <xs:enumeration value="UpperAlpha"/>
          <xs:enumeration value="UpperLatin"/>
          <xs:enumeration value="UpperRoman"/>
          <xs:enumeration value="Inherit"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleListsType" nillable="true" type="tns:CSSStyleListsType"/>
      <xs:complexType name="CSSStyleLayout">
        <xs:sequence>
          <xs:element minOccurs="0" name="Clip" nillable="true" type="tns:CSSStyleLayoutClip"/>
          <xs:element minOccurs="0" name="Visibility" type="tns:CSSStyleLayoutVisibility"/>
          <xs:element minOccurs="0" name="Display" type="tns:CSSStyleLayoutDisplay"/>
          <xs:element minOccurs="0" name="Float" type="tns:CSSStyleLayoutFloat"/>
          <xs:element minOccurs="0" name="Clear" type="tns:CSSStyleLayoutClear"/>
          <xs:element minOccurs="0" name="Overflow" type="tns:CSSStyleLayoutOverflow"/>
          <xs:element minOccurs="0" name="PageBreakBefore" type="tns:CSSStyleLayoutPageBreak"/>
          <xs:element minOccurs="0" name="PageBreakAfter" type="tns:CSSStyleLayoutPageBreak"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleLayout" nillable="true" type="tns:CSSStyleLayout"/>
      <xs:complexType name="CSSStyleLayoutClip">
        <xs:sequence>
          <xs:element minOccurs="0" name="Top" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Bottom" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Left" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Right" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleLayoutClip" nillable="true" type="tns:CSSStyleLayoutClip"/>
      <xs:simpleType name="CSSStyleLayoutVisibility">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Visible"/>
          <xs:enumeration value="Hidden"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleLayoutVisibility" nillable="true" type="tns:CSSStyleLayoutVisibility"/>
      <xs:simpleType name="CSSStyleLayoutDisplay">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Inline"/>
          <xs:enumeration value="Block"/>
          <xs:enumeration value="None"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleLayoutDisplay" nillable="true" type="tns:CSSStyleLayoutDisplay"/>
      <xs:simpleType name="CSSStyleLayoutFloat">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="None"/>
          <xs:enumeration value="Left"/>
          <xs:enumeration value="Right"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleLayoutFloat" nillable="true" type="tns:CSSStyleLayoutFloat"/>
      <xs:simpleType name="CSSStyleLayoutClear">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Both"/>
          <xs:enumeration value="Left"/>
          <xs:enumeration value="Right"/>
          <xs:enumeration value="None"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleLayoutClear" nillable="true" type="tns:CSSStyleLayoutClear"/>
      <xs:simpleType name="CSSStyleLayoutOverflow">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Auto"/>
          <xs:enumeration value="Scroll"/>
          <xs:enumeration value="Visible"/>
          <xs:enumeration value="Hidden"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleLayoutOverflow" nillable="true" type="tns:CSSStyleLayoutOverflow"/>
      <xs:simpleType name="CSSStyleLayoutPageBreak">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Always"/>
          <xs:enumeration value="Auto"/>
          <xs:enumeration value="Avoid"/>
          <xs:enumeration value="Left"/>
          <xs:enumeration value="Right"/>
          <xs:enumeration value="Inherit"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStyleLayoutPageBreak" nillable="true" type="tns:CSSStyleLayoutPageBreak"/>
      <xs:complexType name="CSSStylePosition">
        <xs:sequence>
          <xs:element minOccurs="0" name="Top" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Left" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Bottom" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Right" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Width" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Height" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="MinWidth" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="MinHeight" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Type" type="tns:CSSStylePositionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStylePosition" nillable="true" type="tns:CSSStylePosition"/>
      <xs:simpleType name="CSSStylePositionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="Static"/>
          <xs:enumeration value="Relative"/>
          <xs:enumeration value="Absolute"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CSSStylePositionType" nillable="true" type="tns:CSSStylePositionType"/>
      <xs:complexType name="ArrayOfCSSStyleItem">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CSSStyleItem" nillable="true" type="tns:CSSStyleItem"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfCSSStyleItem" nillable="true" type="tns:ArrayOfCSSStyleItem"/>
      <xs:complexType name="CSSStyleItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Key" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CSSStyleItem" nillable="true" type="tns:CSSStyleItem"/>
      <xs:complexType name="AggregatedTableLayoutHtmlStyles">
        <xs:sequence>
          <xs:element minOccurs="0" name="TableTitleStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="DefaultCellStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="DataCellStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="HeaderCellStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="DataTotalCellStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="HeaderTotalCellStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="RowTagStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TableTagStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="HeaderLineCellStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="NetsHeaderStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="NetsDataStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="RowHeaderCellStyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ColumnHeaderCellStyleName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="AggregatedTableLayoutHtmlStyles" nillable="true" type="tns:AggregatedTableLayoutHtmlStyles"/>
      <xs:complexType name="DistributionFormat">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Count" type="xs:boolean"/>
          <xs:element minOccurs="0" name="HorizontalPercents" type="xs:boolean"/>
          <xs:element minOccurs="0" name="VerticalPercents" type="xs:boolean"/>
          <xs:element minOccurs="0" name="UseInnermostTotals" type="xs:boolean"/>
          <xs:element minOccurs="0" name="StatType" type="tns:DistributionFormat.AdditionalStatType"/>
          <xs:element minOccurs="0" name="HidePercentSign" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DistributionFormat" nillable="true" type="tns:DistributionFormat"/>
      <xs:simpleType name="DistributionFormat.AdditionalStatType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Affinity"/>
          <xs:enumeration value="TablePercent"/>
          <xs:enumeration value="ChiSquare"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DistributionFormat.AdditionalStatType" nillable="true" type="tns:DistributionFormat.AdditionalStatType"/>
      <xs:complexType name="NumberFormat">
        <xs:sequence>
          <xs:element minOccurs="0" name="TimeSpan" type="tns:TimeSpanType"/>
          <xs:element minOccurs="0" name="Format" type="tns:NumberFormatType"/>
          <xs:element minOccurs="0" name="CurrencySymbol" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="NumberFormat" nillable="true" type="tns:NumberFormat"/>
      <xs:simpleType name="TimeSpanType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Days"/>
          <xs:enumeration value="Hours"/>
          <xs:enumeration value="Minutes"/>
          <xs:enumeration value="Seconds"/>
          <xs:enumeration value="Milliseconds"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TimeSpanType" nillable="true" type="tns:TimeSpanType"/>
      <xs:simpleType name="NumberFormatType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Default"/>
          <xs:enumeration value="Currency"/>
          <xs:enumeration value="Timespan"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="NumberFormatType" nillable="true" type="tns:NumberFormatType"/>
      <xs:simpleType name="RowNestingType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AsLines"/>
          <xs:enumeration value="Nesting"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="RowNestingType" nillable="true" type="tns:RowNestingType"/>
      <xs:simpleType name="BaseType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ExcludeNotAnswered"/>
          <xs:enumeration value="IncludeNotAnswered"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="BaseType" nillable="true" type="tns:BaseType"/>
      <xs:complexType name="RemoveEmptyHeaders">
        <xs:sequence>
          <xs:element minOccurs="0" name="Rows" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Columns" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="RemoveEmptyHeaders" nillable="true" type="tns:RemoveEmptyHeaders"/>
      <xs:complexType name="CellHiding">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:CellHidingBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DistributionMeasure" type="tns:DistributionMeasureType"/>
              <xs:element minOccurs="0" name="BaseDisplay" type="tns:BaseDisplayOption"/>
              <xs:element minOccurs="0" name="Statistic" type="tns:StatisticType"/>
              <xs:element minOccurs="0" name="CellDisplay" type="tns:BaseDisplayOption"/>
              <xs:element minOccurs="0" name="CellStatistic" type="tns:CellStatisticType"/>
              <xs:element minOccurs="0" name="CellLimit" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CellHiding" nillable="true" type="tns:CellHiding"/>
      <xs:complexType name="CellHidingBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="SuppressData" type="xs:boolean"/>
          <xs:element minOccurs="0" name="BaseLessThan" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CellHidingBase" nillable="true" type="tns:CellHidingBase"/>
      <xs:simpleType name="DistributionMeasureType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="InnermostRow"/>
          <xs:enumeration value="InnermostColumn"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DistributionMeasureType" nillable="true" type="tns:DistributionMeasureType"/>
      <xs:simpleType name="BaseDisplayOption">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Show"/>
          <xs:enumeration value="Hide"/>
          <xs:enumeration value="ShowMarker"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="BaseDisplayOption" nillable="true" type="tns:BaseDisplayOption"/>
      <xs:simpleType name="StatisticType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Count"/>
          <xs:enumeration value="Percent"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="StatisticType" nillable="true" type="tns:StatisticType"/>
      <xs:simpleType name="CellStatisticType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Count"/>
          <xs:enumeration value="VertPercent"/>
          <xs:enumeration value="HorzPercent"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CellStatisticType" nillable="true" type="tns:CellStatisticType"/>
      <xs:simpleType name="DataDimensionPositionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Left"/>
          <xs:enumeration value="Top"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DataDimensionPositionType" nillable="true" type="tns:DataDimensionPositionType"/>
      <xs:complexType name="TableSorting">
        <xs:sequence>
          <xs:element minOccurs="0" name="Columns" nillable="true" type="tns:SortInfo"/>
          <xs:element minOccurs="0" name="Rows" nillable="true" type="tns:SortInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="TableSorting" nillable="true" type="tns:TableSorting"/>
      <xs:complexType name="SortInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="Direction" type="tns:TableSortDirection"/>
          <xs:element minOccurs="0" name="SortByHeaderId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="TopN" type="xs:int"/>
          <xs:element minOccurs="0" name="BottomN" type="xs:int"/>
          <xs:element minOccurs="0" name="SortByType" type="tns:TableSortByType"/>
          <xs:element minOccurs="0" name="Precode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="PositionDirection" type="tns:TableSortByPositionType"/>
          <xs:element minOccurs="0" name="FixedFromStart" type="xs:int"/>
          <xs:element minOccurs="0" name="FixedFromEnd" type="xs:int"/>
          <xs:element minOccurs="0" name="Position" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="SortInfo" nillable="true" type="tns:SortInfo"/>
      <xs:simpleType name="TableSortDirection">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Ascending"/>
          <xs:enumeration value="Descending"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TableSortDirection" nillable="true" type="tns:TableSortDirection"/>
      <xs:simpleType name="TableSortByType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Header"/>
          <xs:enumeration value="Position"/>
          <xs:enumeration value="Precode"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TableSortByType" nillable="true" type="tns:TableSortByType"/>
      <xs:simpleType name="TableSortByPositionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FromStart"/>
          <xs:enumeration value="FromEnd"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TableSortByPositionType" nillable="true" type="tns:TableSortByPositionType"/>
      <xs:complexType name="PersonalAnswerIndicator">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Position" type="tns:PersonalPositionType"/>
          <xs:element minOccurs="0" name="Text" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="PersonalAnswerIndicator" nillable="true" type="tns:PersonalAnswerIndicator"/>
      <xs:simpleType name="PersonalPositionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Content"/>
          <xs:enumeration value="Prefix"/>
          <xs:enumeration value="Suffix"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="PersonalPositionType" nillable="true" type="tns:PersonalPositionType"/>
      <xs:complexType name="TableTitle">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="TableDimension" type="tns:TableTitleSourceDimensionType"/>
          <xs:element minOccurs="0" name="Online" type="tns:OnlineTitleType"/>
          <xs:element minOccurs="0" name="TextElement" type="tns:TitleQuestionnaireTextType"/>
          <xs:element minOccurs="0" name="Spacing" type="xs:int"/>
          <xs:element minOccurs="0" name="CustomTitle" nillable="true" type="tns:Label"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="TableTitle" nillable="true" type="tns:TableTitle"/>
      <xs:simpleType name="TableTitleSourceDimensionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Row"/>
          <xs:enumeration value="Column"/>
          <xs:enumeration value="Data"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TableTitleSourceDimensionType" nillable="true" type="tns:TableTitleSourceDimensionType"/>
      <xs:simpleType name="OnlineTitleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AboveTable"/>
          <xs:enumeration value="Hidden"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="OnlineTitleType" nillable="true" type="tns:OnlineTitleType"/>
      <xs:simpleType name="TitleQuestionnaireTextType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Title"/>
          <xs:enumeration value="Text"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TitleQuestionnaireTextType" nillable="true" type="tns:TitleQuestionnaireTextType"/>
      <xs:complexType name="Label">
        <xs:sequence>
          <xs:element minOccurs="0" name="Texts" nillable="true" type="tns:LanguageTextCollection"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Label" nillable="true" type="tns:Label"/>
      <xs:complexType name="LanguageTextCollection">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LanguageText" nillable="true" type="tns:LanguageText"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="LanguageTextCollection" nillable="true" type="tns:LanguageTextCollection"/>
      <xs:complexType name="LanguageText">
        <xs:sequence>
          <xs:element minOccurs="0" name="Language" type="xs:int"/>
          <xs:element minOccurs="0" name="Text" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="LanguageText" nillable="true" type="tns:LanguageText"/>
      <xs:complexType name="TableDrilldown">
        <xs:sequence>
          <xs:element minOccurs="0" name="Rows" nillable="true" type="tns:Drilldown"/>
          <xs:element minOccurs="0" name="Columns" nillable="true" type="tns:Drilldown"/>
          <xs:element minOccurs="0" name="DontFilterOrigin" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="TableDrilldown" nillable="true" type="tns:TableDrilldown"/>
      <xs:complexType name="Drilldown">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Type" type="tns:DrilldownType"/>
          <xs:element minOccurs="0" name="TargetPages" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ParameterID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ShowParameterMenu" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Drilldown" nillable="true" type="tns:Drilldown"/>
      <xs:simpleType name="DrilldownType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FilterData"/>
          <xs:enumeration value="SetParameter"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DrilldownType" nillable="true" type="tns:DrilldownType"/>
      <xs:complexType name="DefaultHeaderSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="Generic" nillable="true" type="tns:HdrVarSettingsGeneric"/>
          <xs:element minOccurs="0" name="Single" nillable="true" type="tns:HdrVarSettingsQuestions"/>
          <xs:element minOccurs="0" name="SingleHierarchy" nillable="true" type="tns:HdrVarSettingsHierarchy"/>
          <xs:element minOccurs="0" name="Multi" nillable="true" type="tns:HdrVarSettingsQuestions"/>
          <xs:element minOccurs="0" name="MultiOrdered" nillable="true" type="tns:HdrVarSettingsQuestions"/>
          <xs:element minOccurs="0" name="MultiNumeric" nillable="true" type="tns:HdrVarSettingsQuestions"/>
          <xs:element minOccurs="0" name="Grid" nillable="true" type="tns:HdrVarSettingsQuestions"/>
          <xs:element minOccurs="0" name="Numeric" nillable="true" type="tns:HdrVarSettingsQuestions"/>
          <xs:element minOccurs="0" name="Date" nillable="true" type="tns:HdrVarSettingsTimeseries"/>
          <xs:element minOccurs="0" name="Categorization" nillable="true" type="tns:HdrVarSettingsCategorization"/>
          <xs:element minOccurs="0" name="Categories" nillable="true" type="tns:HdrVarSettingsCategories"/>
          <xs:element minOccurs="0" name="Statistics" nillable="true" type="tns:HdrVarSettingsStatistics"/>
          <xs:element minOccurs="0" name="Base" nillable="true" type="tns:HdrVarSettingsBase"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DefaultHeaderSettings" nillable="true" type="tns:DefaultHeaderSettings"/>
      <xs:complexType name="HdrVarSettingsGeneric">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:HdrVarSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="ShowTitle" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Collapsed" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Statistics" nillable="true" type="tns:Statistics"/>
              <xs:element minOccurs="0" name="DefaultStatistic" type="tns:StatFunctionType"/>
              <xs:element minOccurs="0" name="ShowNotAnsweredCategory" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowTotals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowSubTotals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="TimeSeries" nillable="true" type="tns:TimeSeriesInfo"/>
              <xs:element minOccurs="0" name="CalculationStyle" type="tns:CalculationStyleType"/>
              <xs:element minOccurs="0" name="SuppressData" type="xs:boolean"/>
              <xs:element minOccurs="0" name="HideSupressBase" type="xs:boolean"/>
              <xs:element minOccurs="0" name="RefGroupSetting" nillable="true" type="tns:ReferenceGroupSetting"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HdrVarSettingsGeneric" nillable="true" type="tns:HdrVarSettingsGeneric"/>
      <xs:complexType name="HdrVarSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="IsActive" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="HdrVarSettings" nillable="true" type="tns:HdrVarSettings"/>
      <xs:complexType name="HdrVarSettingsStatistics">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:HdrVarSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="Statistics" nillable="true" type="tns:Statistics"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HdrVarSettingsStatistics" nillable="true" type="tns:HdrVarSettingsStatistics"/>
      <xs:complexType name="Statistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="Avg" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Stdev" type="xs:boolean"/>
          <xs:element minOccurs="0" name="StdevP" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Var" type="xs:boolean"/>
          <xs:element minOccurs="0" name="VarP" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Max" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Min" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Sum" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Count" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Mode" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Median" type="xs:boolean"/>
          <xs:element minOccurs="0" name="StdError" type="xs:boolean"/>
          <xs:element minOccurs="0" name="WeightedMedian" type="xs:boolean"/>
          <xs:element minOccurs="0" name="WeightedMode" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Statistics" nillable="true" type="tns:Statistics"/>
      <xs:complexType name="HdrVarSettingsCategories">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:HdrVarSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="ShowNotAnsweredCategory" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowTotals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowTitle" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HdrVarSettingsCategories" nillable="true" type="tns:HdrVarSettingsCategories"/>
      <xs:complexType name="HdrVarSettingsBase">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:HdrVarSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="SuppressData" type="xs:boolean"/>
              <xs:element minOccurs="0" name="HideSupressBase" type="xs:boolean"/>
              <xs:element minOccurs="0" name="WeightedTableBase" type="tns:WeightedTableBaseType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HdrVarSettingsBase" nillable="true" type="tns:HdrVarSettingsBase"/>
      <xs:simpleType name="WeightedTableBaseType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Weighted"/>
          <xs:enumeration value="Unweighted"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="WeightedTableBaseType" nillable="true" type="tns:WeightedTableBaseType"/>
      <xs:complexType name="HdrVarSettingsQuestions">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:HdrVarSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="ShowTitle" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Collapsed" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Statistics" nillable="true" type="tns:Statistics"/>
              <xs:element minOccurs="0" name="DefaultStatistic" type="tns:StatFunctionType"/>
              <xs:element minOccurs="0" name="ShowNotAnsweredCategory" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowTotals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowSubTotals" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HdrVarSettingsQuestions" nillable="true" type="tns:HdrVarSettingsQuestions"/>
      <xs:simpleType name="StatFunctionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AVG"/>
          <xs:enumeration value="COUNT"/>
          <xs:enumeration value="SUM"/>
          <xs:enumeration value="MIN"/>
          <xs:enumeration value="MAX"/>
          <xs:enumeration value="STDEV"/>
          <xs:enumeration value="STDEVP"/>
          <xs:enumeration value="VAR"/>
          <xs:enumeration value="VARP"/>
          <xs:enumeration value="MODE"/>
          <xs:enumeration value="MEDIAN"/>
          <xs:enumeration value="STDERROR"/>
          <xs:enumeration value="WEIGHTEDMEDIAN"/>
          <xs:enumeration value="WEIGHTEDMODE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="StatFunctionType" nillable="true" type="tns:StatFunctionType"/>
      <xs:complexType name="HdrVarSettingsHierarchy">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:HdrVarSettingsQuestions">
            <xs:sequence>
              <xs:element minOccurs="0" name="RefGroupSetting" nillable="true" type="tns:ReferenceGroupSetting"/>
              <xs:element xmlns:q4="http://schemas.datacontract.org/2004/07/Confirmit.Reportal.Scripting.WebServiceSupport.StyleModel" minOccurs="0" name="HierLayout" type="q4:HdrVarSettingsHierarchy.HierarchyLayout"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HdrVarSettingsHierarchy" nillable="true" type="tns:HdrVarSettingsHierarchy"/>
      <xs:complexType name="ReferenceGroupSetting">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Self" type="xs:boolean"/>
          <xs:element minOccurs="0" name="SelfExclusiveChildren" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Parent" type="xs:boolean"/>
          <xs:element minOccurs="0" name="TopParent" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AllParents" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AllSiblings" type="xs:boolean"/>
          <xs:element minOccurs="0" name="MaxSibling" type="xs:boolean"/>
          <xs:element minOccurs="0" name="MinSibling" type="xs:boolean"/>
          <xs:element minOccurs="0" name="NumberOfChildLevels" type="xs:int"/>
          <xs:element minOccurs="0" name="SelfExclLabelType" type="tns:SelfExclusiveLabelType"/>
          <xs:element minOccurs="0" name="SelfExclLabel" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Levels" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ReferenceGroupSetting" nillable="true" type="tns:ReferenceGroupSetting"/>
      <xs:simpleType name="SelfExclusiveLabelType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UseDefault"/>
          <xs:enumeration value="SpecifyLabel"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="SelfExclusiveLabelType" nillable="true" type="tns:SelfExclusiveLabelType"/>
      <xs:complexType name="HdrVarSettingsTimeseries">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:HdrVarSettingsQuestions">
            <xs:sequence>
              <xs:element minOccurs="0" name="TimeSeries" nillable="true" type="tns:TimeSeriesInfo"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HdrVarSettingsTimeseries" nillable="true" type="tns:HdrVarSettingsTimeseries"/>
      <xs:complexType name="TimeSeriesInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="Time1" type="tns:TimeseriesTimeUnitType"/>
          <xs:element minOccurs="0" name="Time2" type="tns:TimeseriesTimeUnitType"/>
          <xs:element minOccurs="0" name="Time3" type="tns:TimeseriesTimeUnitType"/>
          <xs:element minOccurs="0" name="Time4" type="tns:TimeseriesTimeUnitType"/>
          <xs:element minOccurs="0" name="Time5" type="tns:TimeseriesTimeUnitType"/>
          <xs:element minOccurs="0" name="StartDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="EndDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="RollingTimeseries" nillable="true" type="tns:RollingTime"/>
          <xs:element minOccurs="0" name="FlatLayout" type="xs:boolean"/>
          <xs:element minOccurs="0" name="DateFormat" type="tns:TimeSeriesDateFormatType"/>
          <xs:element minOccurs="0" name="CustomFormat" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="InheritFromFilter" type="xs:boolean"/>
          <xs:element minOccurs="0" name="UseFiscalCalendar" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ReverseOrder" type="xs:boolean"/>
          <xs:element minOccurs="0" name="FiscalCalendarId" type="ser:guid"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="TimeSeriesInfo" nillable="true" type="tns:TimeSeriesInfo"/>
      <xs:simpleType name="TimeseriesTimeUnitType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Year"/>
          <xs:enumeration value="Quarter"/>
          <xs:enumeration value="Month"/>
          <xs:enumeration value="Week"/>
          <xs:enumeration value="DayOfMonth"/>
          <xs:enumeration value="DayOfWeek"/>
          <xs:enumeration value="Hour"/>
          <xs:enumeration value="Undefined"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TimeseriesTimeUnitType" nillable="true" type="tns:TimeseriesTimeUnitType"/>
      <xs:complexType name="RollingTime">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="From" type="xs:int"/>
          <xs:element minOccurs="0" name="To" type="xs:int"/>
          <xs:element minOccurs="0" name="Unit" type="tns:RollingUnitType"/>
          <xs:element minOccurs="0" name="UseToLimit" type="xs:boolean"/>
          <xs:element minOccurs="0" name="UseFromLimit" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="RollingTime" nillable="true" type="tns:RollingTime"/>
      <xs:simpleType name="RollingUnitType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Day"/>
          <xs:enumeration value="Week"/>
          <xs:enumeration value="Month"/>
          <xs:enumeration value="Quarter"/>
          <xs:enumeration value="Year"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="RollingUnitType" nillable="true" type="tns:RollingUnitType"/>
      <xs:simpleType name="TimeSeriesDateFormatType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Default"/>
          <xs:enumeration value="ShortDate"/>
          <xs:enumeration value="LongDate"/>
          <xs:enumeration value="ShortTime"/>
          <xs:enumeration value="LongTime"/>
          <xs:enumeration value="FullDateTime"/>
          <xs:enumeration value="MonthDay"/>
          <xs:enumeration value="SortableDateTime"/>
          <xs:enumeration value="YearMonth"/>
          <xs:enumeration value="Custom"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TimeSeriesDateFormatType" nillable="true" type="tns:TimeSeriesDateFormatType"/>
      <xs:complexType name="HdrVarSettingsCategorization">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:HdrVarSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="Collapsed" type="xs:boolean"/>
              <xs:element minOccurs="0" name="DefaultStatistic" type="tns:StatFunctionType"/>
              <xs:element minOccurs="0" name="ShowTotals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="CalculationStyle" type="tns:CalculationStyleType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HdrVarSettingsCategorization" nillable="true" type="tns:HdrVarSettingsCategorization"/>
      <xs:simpleType name="CalculationStyleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AverageOfAggregates"/>
          <xs:enumeration value="IndividualCategoryScore"/>
          <xs:enumeration value="AllDatapoints"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CalculationStyleType" nillable="true" type="tns:CalculationStyleType"/>
      <xs:complexType name="TableUpperLevelComparison">
        <xs:sequence>
          <xs:element minOccurs="0" name="SpecifyRelation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="RelationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="RuleForCuts" type="tns:UpperLevelRuleType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="TableUpperLevelComparison" nillable="true" type="tns:TableUpperLevelComparison"/>
      <xs:simpleType name="UpperLevelRuleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UpperLevelOfSelf"/>
          <xs:enumeration value="UpperLevelOfChild"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="UpperLevelRuleType" nillable="true" type="tns:UpperLevelRuleType"/>
      <xs:complexType name="ConditionalFormatting">
        <xs:sequence>
          <xs:element minOccurs="0" name="Areas" nillable="true" type="tns:ArrayOfConditionalFormattingArea"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ConditionalFormatting" nillable="true" type="tns:ConditionalFormatting"/>
      <xs:complexType name="ArrayOfConditionalFormattingArea">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ConditionalFormattingArea" nillable="true" type="tns:ConditionalFormattingArea"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfConditionalFormattingArea" nillable="true" type="tns:ArrayOfConditionalFormattingArea"/>
      <xs:complexType name="ConditionalFormattingArea">
        <xs:sequence>
          <xs:element minOccurs="0" name="AreaId" type="ser:guid"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="FormattingConditions" nillable="true" type="tns:ArrayOfFormattingCondition"/>
          <xs:element minOccurs="0" name="IsRowFormatting" type="xs:boolean"/>
          <xs:element minOccurs="0" name="FormattingRange" nillable="true" type="tns:FormattingRangeBase"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ConditionalFormattingArea" nillable="true" type="tns:ConditionalFormattingArea"/>
      <xs:complexType name="ArrayOfFormattingCondition">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FormattingCondition" nillable="true" type="tns:FormattingCondition"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfFormattingCondition" nillable="true" type="tns:ArrayOfFormattingCondition"/>
      <xs:complexType name="FormattingCondition">
        <xs:sequence>
          <xs:element minOccurs="0" name="ConditionId" type="ser:guid"/>
          <xs:element minOccurs="0" name="StyleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Expression" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FormattingCondition" nillable="true" type="tns:FormattingCondition"/>
      <xs:complexType name="FormattingRangeBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="RangeType" type="tns:FormattingRangeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FormattingRangeBase" nillable="true" type="tns:FormattingRangeBase"/>
      <xs:simpleType name="FormattingRangeType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Absolut"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FormattingRangeType" nillable="true" type="tns:FormattingRangeType"/>
      <xs:complexType name="FormattingRangeAbsolut">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:FormattingRangeBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Indexes" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="FromEnd" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FormattingRangeAbsolut" nillable="true" type="tns:FormattingRangeAbsolut"/>
      <xs:simpleType name="RoundingOfValuesInExpressionsType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Default"/>
          <xs:enumeration value="Rounded"/>
          <xs:enumeration value="Exact"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="RoundingOfValuesInExpressionsType" nillable="true" type="tns:RoundingOfValuesInExpressionsType"/>
      <xs:complexType name="HeaderCollection">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Header" nillable="true" type="tns:Header"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="HeaderCollection" nillable="true" type="tns:HeaderCollection"/>
      <xs:complexType name="Header">
        <xs:sequence>
          <xs:element minOccurs="0" name="SubHeaders" nillable="true" type="tns:HeaderCollection"/>
          <xs:element minOccurs="0" name="Sorting" nillable="true" type="tns:SortInfo"/>
          <xs:element minOccurs="0" name="ShowTitle" type="xs:boolean"/>
          <xs:element minOccurs="0" name="HideData" type="xs:boolean"/>
          <xs:element minOccurs="0" name="HideHeader" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Decimals" type="xs:int"/>
          <xs:element minOccurs="0" name="Distributions" nillable="true" type="tns:DistributionFormat"/>
          <xs:element minOccurs="0" name="Filter" nillable="true" type="tns:DimensionFilter"/>
          <xs:element minOccurs="0" name="HeaderId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="OriginalParameterIdent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="UseDefaults" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Header" nillable="true" type="tns:Header"/>
      <xs:complexType name="DimensionFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ComparisonOperator" type="tns:DimensionFilterComparisonType"/>
          <xs:element minOccurs="0" name="Value" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DimensionFilter" nillable="true" type="tns:DimensionFilter"/>
      <xs:simpleType name="DimensionFilterComparisonType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="LessThan"/>
          <xs:enumeration value="LessThanOrEqual"/>
          <xs:enumeration value="GreaterThan"/>
          <xs:enumeration value="GreaterThanOrEqual"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DimensionFilterComparisonType" nillable="true" type="tns:DimensionFilterComparisonType"/>
      <xs:complexType name="HeaderCategories">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="RecodingShowOriginal" type="xs:boolean"/>
              <xs:element minOccurs="0" name="RecodingPosition" type="tns:RecodingPositionType"/>
              <xs:element minOccurs="0" name="NotAnswered" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Totals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Mask" nillable="true" type="tns:GenericCodeMask"/>
              <xs:element minOccurs="0" name="IgnoreCodes" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="RecodingIdent" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="OverrideFieldNames" nillable="true" type="tns:FieldNameOverrider"/>
              <xs:element minOccurs="0" name="Title" nillable="true" type="tns:Label"/>
              <xs:element minOccurs="0" name="UpperLevelComparison" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderCategories" nillable="true" type="tns:HeaderCategories"/>
      <xs:simpleType name="RecodingPositionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AfterGroup"/>
          <xs:enumeration value="BeforeGroup"/>
          <xs:enumeration value="OnEnd"/>
          <xs:enumeration value="OnStart"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="RecodingPositionType" nillable="true" type="tns:RecodingPositionType"/>
      <xs:complexType name="GenericCodeMask">
        <xs:sequence>
          <xs:element minOccurs="0" name="Type" type="tns:MaskType"/>
          <xs:element minOccurs="0" name="Codes" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ApplyAfterFormulas" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GenericCodeMask" nillable="true" type="tns:GenericCodeMask"/>
      <xs:complexType name="FieldNameOverrider">
        <xs:sequence>
          <xs:element minOccurs="0" name="Enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="From" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="To" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FieldNameOverrider" nillable="true" type="tns:FieldNameOverrider"/>
      <xs:complexType name="HeaderCorrelation">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="Function" type="tns:CorrelationType"/>
              <xs:element minOccurs="0" name="QuestionnaireElement" nillable="true" type="tns:QuestionnaireElement"/>
              <xs:element minOccurs="0" name="Title" nillable="true" type="tns:Label"/>
              <xs:element minOccurs="0" name="IsPercent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="DataSourceNodeId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="CategorizationId" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderCorrelation" nillable="true" type="tns:HeaderCorrelation"/>
      <xs:simpleType name="CorrelationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Correlation"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CorrelationType" nillable="true" type="tns:CorrelationType"/>
      <xs:complexType name="QuestionnaireElement">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ParameterValue">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSourceProjectId" type="ser:guid"/>
              <xs:element minOccurs="0" name="RecodingShowOriginal" type="xs:boolean"/>
              <xs:element minOccurs="0" name="RecodingPosition" type="tns:RecodingPositionType"/>
              <xs:element minOccurs="0" name="RecodingID" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="ProjectSource" nillable="true" type="tns:ProjectSource"/>
              <xs:element minOccurs="0" name="QuestionId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="FieldPrecode" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="IsOtherSpecify" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IsFactorScore" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IsClusterAssignment" type="xs:boolean"/>
              <xs:element minOccurs="0" name="LevelName" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="NameSpace" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="Scope" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="QuestionnaireElement" nillable="true" type="tns:QuestionnaireElement"/>
      <xs:complexType name="ParameterValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="IsPartOfState" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Label" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ParameterValue" nillable="true" type="tns:ParameterValue"/>
      <xs:complexType name="ProjectSource">
        <xs:sequence>
          <xs:element minOccurs="0" name="SourceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SourceType" type="tns:ProjectSourceType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ProjectSource" nillable="true" type="tns:ProjectSource"/>
      <xs:simpleType name="ProjectSourceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DataSourceNodeId"/>
          <xs:enumeration value="ProjectId"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ProjectSourceType" nillable="true" type="tns:ProjectSourceType"/>
      <xs:complexType name="HeaderChartCombo">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="TypeOfChart" type="tns:ChartComboType"/>
              <xs:element minOccurs="0" name="Title" nillable="true" type="tns:Label"/>
              <xs:element minOccurs="0" name="Size" type="xs:int"/>
              <xs:element minOccurs="0" name="Values" nillable="true" type="tns:ArrayOfChartComboValue"/>
              <xs:element minOccurs="0" name="ReverseDirection" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Thickness" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="CssClass" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderChartCombo" nillable="true" type="tns:HeaderChartCombo"/>
      <xs:simpleType name="ChartComboType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Bar"/>
          <xs:enumeration value="Bar100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ChartComboType" nillable="true" type="tns:ChartComboType"/>
      <xs:complexType name="ArrayOfChartComboValue">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ChartComboValue" nillable="true" type="tns:ChartComboValue"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfChartComboValue" nillable="true" type="tns:ArrayOfChartComboValue"/>
      <xs:complexType name="ChartComboValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Expression" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BaseColor" nillable="true" type="tns:ChartComboColorSet"/>
          <xs:element minOccurs="0" name="AltColors" nillable="true" type="tns:ArrayOfChartComboColorAlternative"/>
          <xs:element minOccurs="0" name="Low" nillable="true" type="xs:double"/>
          <xs:element minOccurs="0" name="High" nillable="true" type="xs:double"/>
          <xs:element minOccurs="0" name="CssClass" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartComboValue" nillable="true" type="tns:ChartComboValue"/>
      <xs:complexType name="ChartComboColorSet">
        <xs:sequence>
          <xs:element xmlns:q5="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="Colors" nillable="true" type="q5:ArrayOfstring"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartComboColorSet" nillable="true" type="tns:ChartComboColorSet"/>
      <xs:complexType name="ArrayOfChartComboColorAlternative">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ChartComboColorAlternative" nillable="true" type="tns:ChartComboColorAlternative"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfChartComboColorAlternative" nillable="true" type="tns:ArrayOfChartComboColorAlternative"/>
      <xs:complexType name="ChartComboColorAlternative">
        <xs:sequence>
          <xs:element minOccurs="0" name="Threshold" type="xs:double"/>
          <xs:element minOccurs="0" name="Color" nillable="true" type="tns:ChartComboColorSet"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartComboColorAlternative" nillable="true" type="tns:ChartComboColorAlternative"/>
      <xs:complexType name="HeaderSegment">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="SegmentType" type="tns:HeaderSegmentType"/>
              <xs:element minOccurs="0" name="Expression" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="SegmentId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="DataSourceNodeId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="Label" nillable="true" type="tns:Label"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderSegment" nillable="true" type="tns:HeaderSegment"/>
      <xs:simpleType name="HeaderSegmentType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Expression"/>
          <xs:enumeration value="SegmentReference"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="HeaderSegmentType" nillable="true" type="tns:HeaderSegmentType"/>
      <xs:complexType name="HeaderFormula">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="Type" type="tns:FormulaType"/>
              <xs:element minOccurs="0" name="Operator" type="tns:FormulaOperatorType"/>
              <xs:element minOccurs="0" name="ReferenceType" type="tns:FormulaOperatorReferenceType"/>
              <xs:element minOccurs="0" name="LeftArgument" type="xs:int"/>
              <xs:element minOccurs="0" name="RightArgument" type="xs:int"/>
              <xs:element minOccurs="0" name="Title" nillable="true" type="tns:Label"/>
              <xs:element minOccurs="0" name="Percent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Expression" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="SignificanceTest" type="xs:boolean"/>
              <xs:element minOccurs="0" name="SignificanceColorNegative" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="SignificanceColorPositive" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="Priority" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderFormula" nillable="true" type="tns:HeaderFormula"/>
      <xs:simpleType name="FormulaType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Operators"/>
          <xs:enumeration value="Expression"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FormulaType" nillable="true" type="tns:FormulaType"/>
      <xs:simpleType name="FormulaOperatorType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Divide"/>
          <xs:enumeration value="Add"/>
          <xs:enumeration value="Subtract"/>
          <xs:enumeration value="Multiply"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FormulaOperatorType" nillable="true" type="tns:FormulaOperatorType"/>
      <xs:simpleType name="FormulaOperatorReferenceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FromStart"/>
          <xs:enumeration value="FromEnd"/>
          <xs:enumeration value="Relative"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FormulaOperatorReferenceType" nillable="true" type="tns:FormulaOperatorReferenceType"/>
      <xs:complexType name="HeaderBanner">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="Headers" nillable="true" type="tns:ArrayOfHeader"/>
              <xs:element minOccurs="0" name="Id" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="DataSourceNodeId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="BannerName" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderBanner" nillable="true" type="tns:HeaderBanner"/>
      <xs:complexType name="ArrayOfHeader">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Header" nillable="true" type="tns:Header"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfHeader" nillable="true" type="tns:ArrayOfHeader"/>
      <xs:complexType name="HeaderStatistics">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="Statistics" nillable="true" type="tns:Statistics"/>
              <xs:element minOccurs="0" name="OverrideFieldNames" nillable="true" type="tns:FieldNameOverrider"/>
              <xs:element minOccurs="0" name="Texts" nillable="true" type="tns:StatisticTexts"/>
              <xs:element minOccurs="0" name="UpperLevelComparison" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderStatistics" nillable="true" type="tns:HeaderStatistics"/>
      <xs:complexType name="StatisticTexts">
        <xs:sequence>
          <xs:element minOccurs="0" name="Average" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Deviation" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Variance" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Sum" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Count" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Min" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Max" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Mode" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="Median" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="StdError" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="WeightedMedian" nillable="true" type="tns:Label"/>
          <xs:element minOccurs="0" name="WeightedMode" nillable="true" type="tns:Label"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="StatisticTexts" nillable="true" type="tns:StatisticTexts"/>
      <xs:complexType name="HeaderQuestion">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="FilterByMask" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Statistics" nillable="true" type="tns:Statistics"/>
              <xs:element minOccurs="0" name="DefaultStatistic" type="tns:StatisticsType"/>
              <xs:element minOccurs="0" name="QuestionnaireElement" nillable="true" type="tns:QuestionnaireElement"/>
              <xs:element minOccurs="0" name="ShowNotAnswered" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowTotals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="ShowSubTotals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IsCollapsed" type="xs:boolean"/>
              <xs:element minOccurs="0" name="TimeSeries" nillable="true" type="tns:TimeSeriesInfo"/>
              <xs:element minOccurs="0" name="ReferenceGroup" nillable="true" type="tns:ReferenceGroupSetting"/>
              <xs:element minOccurs="0" name="OverrideOtherProjects" type="xs:boolean"/>
              <xs:element minOccurs="0" name="AnswerMask" nillable="true" type="tns:Mask"/>
              <xs:element minOccurs="0" name="ScaleMask" nillable="true" type="tns:Mask"/>
              <xs:element minOccurs="0" name="NumericMask" nillable="true" type="tns:NumericMask"/>
              <xs:element minOccurs="0" name="ShowTotalMentions" type="xs:boolean"/>
              <xs:element minOccurs="0" name="HierLayout" type="tns:HierLayout"/>
              <xs:element minOccurs="0" name="DisplayHierarchyAsTree" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Preaggregation" type="tns:PreaggregationType"/>
              <xs:element minOccurs="0" name="PreaggregateAsCount" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderQuestion" nillable="true" type="tns:HeaderQuestion"/>
      <xs:simpleType name="StatisticsType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Average"/>
          <xs:enumeration value="Count"/>
          <xs:enumeration value="Sum"/>
          <xs:enumeration value="Min"/>
          <xs:enumeration value="Max"/>
          <xs:enumeration value="StdDeviationSamplePopulation"/>
          <xs:enumeration value="StdDeviationCompletePopulation"/>
          <xs:enumeration value="VararianceSamplePopulation"/>
          <xs:enumeration value="VarianceCompletePopulation"/>
          <xs:enumeration value="Mode"/>
          <xs:enumeration value="Median"/>
          <xs:enumeration value="WeightedMedian"/>
          <xs:enumeration value="StdError"/>
          <xs:enumeration value="WeightedMode"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="StatisticsType" nillable="true" type="tns:StatisticsType"/>
      <xs:complexType name="Mask">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="Mask" nillable="true" type="tns:Mask"/>
      <xs:complexType name="MaskFlat">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Mask">
            <xs:sequence>
              <xs:element xmlns:q6="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="Codes" nillable="true" type="q6:ArrayOfanyType"/>
              <xs:element minOccurs="0" name="IsInclusive" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="MaskFlat" nillable="true" type="tns:MaskFlat"/>
      <xs:complexType name="MaskHierarchy">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Mask">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfHierarchyNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="MaskHierarchy" nillable="true" type="tns:MaskHierarchy"/>
      <xs:complexType name="ArrayOfHierarchyNode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="HierarchyNode" nillable="true" type="tns:HierarchyNode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfHierarchyNode" nillable="true" type="tns:ArrayOfHierarchyNode"/>
      <xs:complexType name="HierarchyNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="Code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Level" nillable="true" type="tns:HierarchyLevel"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="HierarchyNode" nillable="true" type="tns:HierarchyNode"/>
      <xs:complexType name="HierarchyLevel">
        <xs:sequence>
          <xs:element minOccurs="0" name="RelationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TableName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="HierarchyLevel" nillable="true" type="tns:HierarchyLevel"/>
      <xs:complexType name="NumericMask">
        <xs:sequence>
          <xs:element minOccurs="0" name="Values" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Type" type="tns:NumericMaskType"/>
          <xs:element minOccurs="0" name="UpperLimit" type="xs:int"/>
          <xs:element minOccurs="0" name="LowerLimit" type="xs:int"/>
          <xs:element minOccurs="0" name="UseUpperLimit" type="xs:boolean"/>
          <xs:element minOccurs="0" name="UseLowerLimit" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="NumericMask" nillable="true" type="tns:NumericMask"/>
      <xs:simpleType name="NumericMaskType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ShowAll"/>
          <xs:enumeration value="ShowRange"/>
          <xs:enumeration value="ShowValues"/>
          <xs:enumeration value="HideRange"/>
          <xs:enumeration value="HideValues"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="NumericMaskType" nillable="true" type="tns:NumericMaskType"/>
      <xs:simpleType name="HierLayout">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Flat"/>
          <xs:enumeration value="Nested"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="HierLayout" nillable="true" type="tns:HierLayout"/>
      <xs:simpleType name="PreaggregationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Average"/>
          <xs:enumeration value="Count"/>
          <xs:enumeration value="Sum"/>
          <xs:enumeration value="Min"/>
          <xs:enumeration value="Max"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="PreaggregationType" nillable="true" type="tns:PreaggregationType"/>
      <xs:complexType name="HeaderCategorization">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="CalculationRule" type="tns:CategorizationType"/>
              <xs:element minOccurs="0" name="DefaultStatistic" type="tns:StatisticsType"/>
              <xs:element minOccurs="0" name="CategorizationId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="Totals" type="xs:boolean"/>
              <xs:element minOccurs="0" name="DataSourceNodeId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="Collapsed" type="xs:boolean"/>
              <xs:element minOccurs="0" name="OverrideOtherProjects" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Preaggregation" type="tns:PreaggregationType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderCategorization" nillable="true" type="tns:HeaderCategorization"/>
      <xs:simpleType name="CategorizationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AverageOfAggregates"/>
          <xs:enumeration value="AverageOfIndividuals"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CategorizationType" nillable="true" type="tns:CategorizationType"/>
      <xs:complexType name="HeaderBenchmark">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="BenchmarkProjectId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="BenchmarkSet" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="Percent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="DynamicSelection" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderBenchmark" nillable="true" type="tns:HeaderBenchmark"/>
      <xs:complexType name="HeaderBase">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="Suppress" type="xs:boolean"/>
              <xs:element minOccurs="0" name="HideSuppressedBase" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IgnoreCodes" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="WeightedTables" type="tns:WeightedTableBaseType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderBase" nillable="true" type="tns:HeaderBase"/>
      <xs:complexType name="HeaderContent">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Header">
            <xs:sequence>
              <xs:element minOccurs="0" name="Title" nillable="true" type="tns:Label"/>
              <xs:element minOccurs="0" name="Percent" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HeaderContent" nillable="true" type="tns:HeaderContent"/>
      <xs:simpleType name="PersonalizedFilterStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Default"/>
          <xs:enumeration value="On"/>
          <xs:enumeration value="Off"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="PersonalizedFilterStatus" nillable="true" type="tns:PersonalizedFilterStatus"/>
      <xs:complexType name="BatchRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Requests" nillable="true" type="tns:ArrayOfRequestBase"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BatchRequest" nillable="true" type="tns:BatchRequest"/>
      <xs:complexType name="ArrayOfRequestBase">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RequestBase" nillable="true" type="tns:RequestBase"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfRequestBase" nillable="true" type="tns:ArrayOfRequestBase"/>
      <xs:complexType name="ChangeAnalystTableStyleRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="TableId" type="ser:guid"/>
              <xs:element minOccurs="0" name="NewStyleId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ChangeAnalystTableStyleRequest" nillable="true" type="tns:ChangeAnalystTableStyleRequest"/>
      <xs:complexType name="CreateAnalystNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Node" nillable="true" type="tns:AnalystNode"/>
              <xs:element minOccurs="0" name="TargetNodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="RelativeNodePosition" type="tns:RelativeNodePosition"/>
              <xs:element minOccurs="0" name="DefaultTableStyleId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateAnalystNodeRequest" nillable="true" type="tns:CreateAnalystNodeRequest"/>
      <xs:complexType name="AnalystNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="AnalystNode" nillable="true" type="tns:AnalystNode"/>
      <xs:complexType name="AnalystFolderNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:AnalystNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Children" nillable="true" type="tns:ArrayOfAnalystNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="AnalystFolderNode" nillable="true" type="tns:AnalystFolderNode"/>
      <xs:complexType name="ArrayOfAnalystNode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AnalystNode" nillable="true" type="tns:AnalystNode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfAnalystNode" nillable="true" type="tns:ArrayOfAnalystNode"/>
      <xs:complexType name="AnalystTableNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:AnalystNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Table" nillable="true" type="tns:Table"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="AnalystTableNode" nillable="true" type="tns:AnalystTableNode"/>
      <xs:complexType name="AnalystRootNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:AnalystNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="PrivateFolder" nillable="true" type="tns:AnalystFolderNode"/>
              <xs:element minOccurs="0" name="PublicFolder" nillable="true" type="tns:AnalystFolderNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="AnalystRootNode" nillable="true" type="tns:AnalystRootNode"/>
      <xs:complexType name="CreateFilterNodesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfFilterNode"/>
              <xs:element minOccurs="0" name="TargetNodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="RelativeNodePosition" type="tns:RelativeNodePosition"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateFilterNodesRequest" nillable="true" type="tns:CreateFilterNodesRequest"/>
      <xs:complexType name="ArrayOfFilterNode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FilterNode" nillable="true" type="tns:FilterNode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfFilterNode" nillable="true" type="tns:ArrayOfFilterNode"/>
      <xs:complexType name="FilterNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FilterNode" nillable="true" type="tns:FilterNode"/>
      <xs:complexType name="FilterBase">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:FilterNode">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FilterBase" nillable="true" type="tns:FilterBase"/>
      <xs:complexType name="ScriptFilter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:FilterBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Script" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ScriptFilter" nillable="true" type="tns:ScriptFilter"/>
      <xs:complexType name="FilterFolder">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:FilterNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Children" nillable="true" type="tns:ArrayOfFilterNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FilterFolder" nillable="true" type="tns:FilterFolder"/>
      <xs:complexType name="FilterRoot">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:FilterNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Children" nillable="true" type="tns:ArrayOfFilterNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FilterRoot" nillable="true" type="tns:FilterRoot"/>
      <xs:complexType name="Filter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:FilterBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ExpressionType" type="tns:FilterExpressionType"/>
              <xs:element minOccurs="0" name="Expression" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="Filter" nillable="true" type="tns:Filter"/>
      <xs:simpleType name="FilterExpressionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Regular"/>
          <xs:enumeration value="TGL"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FilterExpressionType" nillable="true" type="tns:FilterExpressionType"/>
      <xs:complexType name="CompositeFilter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:FilterBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Type" type="tns:CompositeFilterType"/>
              <xs:element minOccurs="0" name="RootLogicNode" nillable="true" type="tns:CompositeFilterLogicNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CompositeFilter" nillable="true" type="tns:CompositeFilter"/>
      <xs:simpleType name="CompositeFilterType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Simple"/>
          <xs:enumeration value="Advanced"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CompositeFilterType" nillable="true" type="tns:CompositeFilterType"/>
      <xs:complexType name="CompositeFilterLogicNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:CompositeFilterNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Type" type="tns:CompositeFilterLogicNodeType"/>
              <xs:element minOccurs="0" name="Children" nillable="true" type="tns:ArrayOfCompositeFilterNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CompositeFilterLogicNode" nillable="true" type="tns:CompositeFilterLogicNode"/>
      <xs:complexType name="CompositeFilterNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Not" type="xs:boolean"/>
          <xs:element minOccurs="0" name="IncludeUnanswered" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CompositeFilterNode" nillable="true" type="tns:CompositeFilterNode"/>
      <xs:complexType name="CompositeFilterComparisonNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:CompositeFilterNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Field" nillable="true" type="tns:QuestionnaireElement"/>
              <xs:element minOccurs="0" name="OperatorType" type="tns:ComparisonOperatorType"/>
              <xs:element xmlns:q7="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="Values" nillable="true" type="q7:ArrayOfstring"/>
              <xs:element minOccurs="0" name="RollingDate" nillable="true" type="tns:RollingTime"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CompositeFilterComparisonNode" nillable="true" type="tns:CompositeFilterComparisonNode"/>
      <xs:simpleType name="ComparisonOperatorType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="In"/>
          <xs:enumeration value="Like"/>
          <xs:enumeration value="Equal"/>
          <xs:enumeration value="NotEqual"/>
          <xs:enumeration value="LessThan"/>
          <xs:enumeration value="GreaterThan"/>
          <xs:enumeration value="LessThanOrEqual"/>
          <xs:enumeration value="GreaterThanOrEqual"/>
          <xs:enumeration value="And"/>
          <xs:enumeration value="Or"/>
          <xs:enumeration value="Selected"/>
          <xs:enumeration value="NotSelected"/>
          <xs:enumeration value="Undefined"/>
          <xs:enumeration value="RollingDate"/>
          <xs:enumeration value="Between"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ComparisonOperatorType" nillable="true" type="tns:ComparisonOperatorType"/>
      <xs:simpleType name="CompositeFilterLogicNodeType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="And"/>
          <xs:enumeration value="Or"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CompositeFilterLogicNodeType" nillable="true" type="tns:CompositeFilterLogicNodeType"/>
      <xs:complexType name="ArrayOfCompositeFilterNode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CompositeFilterNode" nillable="true" type="tns:CompositeFilterNode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfCompositeFilterNode" nillable="true" type="tns:ArrayOfCompositeFilterNode"/>
      <xs:complexType name="CreateReportTreeNodesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfReportTreeNode"/>
              <xs:element minOccurs="0" name="TargetNodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="RelativeNodePosition" type="tns:RelativeNodePosition"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateReportTreeNodesRequest" nillable="true" type="tns:CreateReportTreeNodesRequest"/>
      <xs:complexType name="GetReportTreeNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="NodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Depth" type="xs:int"/>
              <xs:element minOccurs="0" name="Mode" type="tns:ReportingMode"/>
              <xs:element minOccurs="0" name="IncludePageMasterComponents" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IncludeReportMasterComponents" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetReportTreeNodeRequest" nillable="true" type="tns:GetReportTreeNodeRequest"/>
      <xs:complexType name="DeleteFilterNodesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element xmlns:q8="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="NodeIds" nillable="true" type="q8:ArrayOfguid"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DeleteFilterNodesRequest" nillable="true" type="tns:DeleteFilterNodesRequest"/>
      <xs:complexType name="GetFilterNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="NodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Depth" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetFilterNodeRequest" nillable="true" type="tns:GetFilterNodeRequest"/>
      <xs:complexType name="MoveFilterNodesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element xmlns:q9="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="NodeIds" nillable="true" type="q9:ArrayOfguid"/>
              <xs:element minOccurs="0" name="TargetNodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="RelativeNodePosition" type="tns:RelativeNodePosition"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="MoveFilterNodesRequest" nillable="true" type="tns:MoveFilterNodesRequest"/>
      <xs:complexType name="CreateReportFromTemplateRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSourceId" type="ser:guid"/>
              <xs:element minOccurs="0" name="TemplateId" type="ser:guid"/>
              <xs:element minOccurs="0" name="UseTestDataBase" type="xs:boolean"/>
              <xs:element minOccurs="0" name="CreateAsTemplate" type="xs:boolean"/>
              <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="DuplicateDataSource" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateReportFromTemplateRequest" nillable="true" type="tns:CreateReportFromTemplateRequest"/>
      <xs:complexType name="CreateAnalystNodesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfAnalystNode"/>
              <xs:element minOccurs="0" name="TargetNodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="RelativeNodePosition" type="tns:RelativeNodePosition"/>
              <xs:element minOccurs="0" name="DefaultTableStyleId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateAnalystNodesRequest" nillable="true" type="tns:CreateAnalystNodesRequest"/>
      <xs:complexType name="ListStylesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ListStylesRequest" nillable="true" type="tns:ListStylesRequest"/>
      <xs:complexType name="CreateStyleRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Style" nillable="true" type="tns:ReportComponentStyle"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateStyleRequest" nillable="true" type="tns:CreateStyleRequest"/>
      <xs:complexType name="DeleteStyleRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="StyleId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DeleteStyleRequest" nillable="true" type="tns:DeleteStyleRequest"/>
      <xs:complexType name="GetStyleRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="StyleId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetStyleRequest" nillable="true" type="tns:GetStyleRequest"/>
      <xs:complexType name="DeleteAnalystNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="NodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DeleteAnalystNodeRequest" nillable="true" type="tns:DeleteAnalystNodeRequest"/>
      <xs:complexType name="GetAnalystTableRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="TableId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetAnalystTableRequest" nillable="true" type="tns:GetAnalystTableRequest"/>
      <xs:complexType name="GetAnalystNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="NodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Depth" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetAnalystNodeRequest" nillable="true" type="tns:GetAnalystNodeRequest"/>
      <xs:complexType name="MoveAnalystNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="NodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="TargetNodeId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="RelativeNodePosition" type="tns:RelativeNodePosition"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="MoveAnalystNodeRequest" nillable="true" type="tns:MoveAnalystNodeRequest"/>
      <xs:complexType name="CreateReportRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Report" nillable="true" type="tns:Report"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateReportRequest" nillable="true" type="tns:CreateReportRequest"/>
      <xs:complexType name="Report">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="Number" type="xs:int"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="DataSourceId" type="ser:guid"/>
          <xs:element minOccurs="0" name="IsOffline" type="xs:boolean"/>
          <xs:element minOccurs="0" name="UseTestDatabase" type="xs:boolean"/>
          <xs:element minOccurs="0" name="DefaultLanguageId" type="xs:int"/>
          <xs:element minOccurs="0" name="IsPublic" type="xs:boolean"/>
          <xs:element minOccurs="0" name="TimeZoneOffset" type="xs:int"/>
          <xs:element minOccurs="0" name="WeekRule" type="tns:WeekRuleType"/>
          <xs:element minOccurs="0" name="IsExportable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="MaxAggregatedTables" type="xs:int"/>
          <xs:element minOccurs="0" name="UseBitStream" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ExportSettings" nillable="true" type="tns:ExportSettings"/>
          <xs:element minOccurs="0" name="CacheSettings" nillable="true" type="tns:CacheSetting"/>
          <xs:element xmlns:q10="http://schemas.datacontract.org/2004/07/System" minOccurs="0" name="FirstDayOfWeek" type="q10:DayOfWeek"/>
          <xs:element minOccurs="0" name="Titles" nillable="true" type="tns:ArrayOfLanguageText"/>
          <xs:element minOccurs="0" name="TabulationEngineVersion" type="tns:TabulationEngineVersionType"/>
          <xs:element minOccurs="0" name="DrillDownLayout" nillable="true" type="tns:DrillDownLayout"/>
          <xs:element minOccurs="0" name="IsTemplate" type="xs:boolean"/>
          <xs:element minOccurs="0" name="PanelId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Languages" nillable="true" type="tns:ArrayOfLanguageText"/>
          <xs:element minOccurs="0" name="InstantAnalyticsReport" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Report" nillable="true" type="tns:Report"/>
      <xs:simpleType name="WeekRuleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FirstDay"/>
          <xs:enumeration value="FirstFourDayWeek">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="FirstFullWeek">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">1</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="WeekRuleType" nillable="true" type="tns:WeekRuleType"/>
      <xs:complexType name="ExportSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="PowerPointTemplateName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="DefaultExportScope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="DefaultExportFormat" type="tns:ExportFormat"/>
          <xs:element minOccurs="0" name="DefaultPdfOrientation" type="tns:PdfOrientation"/>
          <xs:element minOccurs="0" name="PowerPointTemplateFrontPages" type="xs:int"/>
          <xs:element minOccurs="0" name="ExcelEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="SinglePageExcelEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="PowerPointEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="PdfEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="EnableCompression" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ExportSettings" nillable="true" type="tns:ExportSettings"/>
      <xs:simpleType name="ExportFormat">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Excel"/>
          <xs:enumeration value="PowerPoint"/>
          <xs:enumeration value="Word"/>
          <xs:enumeration value="PDF"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ExportFormat" nillable="true" type="tns:ExportFormat"/>
      <xs:simpleType name="PdfOrientation">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Portrait"/>
          <xs:enumeration value="Landscape"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="PdfOrientation" nillable="true" type="tns:PdfOrientation"/>
      <xs:complexType name="CacheSetting">
        <xs:sequence>
          <xs:element minOccurs="0" name="Unit" type="tns:CacheUnitType"/>
          <xs:element minOccurs="0" name="Value" type="xs:int"/>
          <xs:element minOccurs="0" name="ExpiryDate" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CacheSetting" nillable="true" type="tns:CacheSetting"/>
      <xs:simpleType name="CacheUnitType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Never"/>
          <xs:enumeration value="Weeks"/>
          <xs:enumeration value="Days"/>
          <xs:enumeration value="Hours"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="CacheUnitType" nillable="true" type="tns:CacheUnitType"/>
      <xs:complexType name="ArrayOfLanguageText">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="LanguageText" nillable="true" type="tns:LanguageText"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfLanguageText" nillable="true" type="tns:ArrayOfLanguageText"/>
      <xs:simpleType name="TabulationEngineVersionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="V1"/>
          <xs:enumeration value="V2"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="TabulationEngineVersionType" nillable="true" type="tns:TabulationEngineVersionType"/>
      <xs:complexType name="DrillDownLayout">
        <xs:sequence>
          <xs:element minOccurs="0" name="NavigatorMenuStyle" type="tns:NavigatorMenuStylePreset"/>
          <xs:element minOccurs="0" name="TextColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Width" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BorderColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="HoverItemBackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="HoverItemForeColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TopSelectedBackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TopSelectedForeColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SubItemBackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TopHoverBackColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="BorderCollapse" type="xs:boolean"/>
          <xs:element minOccurs="0" name="FontFamily" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="FontSize" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ItemSpacingTop" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ItemPaddingTop" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DrillDownLayout" nillable="true" type="tns:DrillDownLayout"/>
      <xs:simpleType name="NavigatorMenuStylePreset">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Office2003Blue">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">1</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Office2003Olive">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Office2003Silver">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">3</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Win2000">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">4</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="WinXPBlue">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">5</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="WinXPOlive">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">6</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="WinXPSilver">
            <xs:annotation>
              <xs:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">7</EnumerationValue>
              </xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="NavigatorMenuStylePreset" nillable="true" type="tns:NavigatorMenuStylePreset"/>
      <xs:complexType name="DeleteReportRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DeleteReportRequest" nillable="true" type="tns:DeleteReportRequest"/>
      <xs:complexType name="GetReportRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="ReportNumber" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetReportRequest" nillable="true" type="tns:GetReportRequest"/>
      <xs:complexType name="ListReportsRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportsType" type="tns:ReportListElementType"/>
              <xs:element minOccurs="0" name="ListFilter" nillable="true" type="tns:ReportListFilterNode"/>
              <xs:element minOccurs="0" name="PagingToken" nillable="true" type="tns:ReportListToken"/>
              <xs:element minOccurs="0" name="SortBy" type="tns:ReportListColumnType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ListReportsRequest" nillable="true" type="tns:ListReportsRequest"/>
      <xs:simpleType name="ReportListElementType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Reports"/>
          <xs:enumeration value="Templates"/>
          <xs:enumeration value="Both"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ReportListElementType" nillable="true" type="tns:ReportListElementType"/>
      <xs:complexType name="ReportListFilterNode">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="ReportListFilterNode" nillable="true" type="tns:ReportListFilterNode"/>
      <xs:complexType name="ReportListFilterLogicNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportListFilterNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="OperatorType" type="tns:ReportListFilterLogicType"/>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfReportListFilterNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportListFilterLogicNode" nillable="true" type="tns:ReportListFilterLogicNode"/>
      <xs:simpleType name="ReportListFilterLogicType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="And"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ReportListFilterLogicType" nillable="true" type="tns:ReportListFilterLogicType"/>
      <xs:complexType name="ArrayOfReportListFilterNode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ReportListFilterNode" nillable="true" type="tns:ReportListFilterNode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfReportListFilterNode" nillable="true" type="tns:ArrayOfReportListFilterNode"/>
      <xs:complexType name="ReportListFilterComparisonNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportListFilterNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="ComparisonOperator" type="tns:ReportListFilterComparisonType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportListFilterComparisonNode" nillable="true" type="tns:ReportListFilterComparisonNode"/>
      <xs:simpleType name="ReportListFilterComparisonType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Equal"/>
          <xs:enumeration value="LessThan"/>
          <xs:enumeration value="GreaterThan"/>
          <xs:enumeration value="LessThanOrEqual"/>
          <xs:enumeration value="GreaterThanOrEqual"/>
          <xs:enumeration value="Like"/>
          <xs:enumeration value="Is"/>
          <xs:enumeration value="IsNot"/>
          <xs:enumeration value="IsNull"/>
          <xs:enumeration value="NotEqual"/>
          <xs:enumeration value="In"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ReportListFilterComparisonType" nillable="true" type="tns:ReportListFilterComparisonType"/>
      <xs:complexType name="ReportListFilterCreatedBy">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportListFilterCreatedBy" nillable="true" type="tns:ReportListFilterCreatedBy"/>
      <xs:complexType name="ReportListFilterReportName">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportListFilterReportName" nillable="true" type="tns:ReportListFilterReportName"/>
      <xs:complexType name="ReportListFilterCreatedDate">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" type="xs:dateTime"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportListFilterCreatedDate" nillable="true" type="tns:ReportListFilterCreatedDate"/>
      <xs:complexType name="ReportListFilterReportNumber">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportListFilterReportNumber" nillable="true" type="tns:ReportListFilterReportNumber"/>
      <xs:complexType name="ReportListFilterCompanyName">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ReportListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReportListFilterCompanyName" nillable="true" type="tns:ReportListFilterCompanyName"/>
      <xs:complexType name="ReportListToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="StartReportId" type="ser:guid"/>
          <xs:element minOccurs="0" name="EndReportId" type="ser:guid"/>
          <xs:element minOccurs="0" name="StartValue" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="EndValue" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="PagingForward" type="xs:boolean"/>
          <xs:element minOccurs="0" name="NumberOfRows" type="xs:int"/>
          <xs:element minOccurs="0" name="AtEnd" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ReportListToken" nillable="true" type="tns:ReportListToken"/>
      <xs:simpleType name="ReportListColumnType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ReportNumber"/>
          <xs:enumeration value="ReportName"/>
          <xs:enumeration value="CreatedDate"/>
          <xs:enumeration value="CreatedBy"/>
          <xs:enumeration value="CompanyName"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ReportListColumnType" nillable="true" type="tns:ReportListColumnType"/>
      <xs:complexType name="ListDataSourcesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSourceListFilter" nillable="true" type="tns:DataSourceListFilterNode"/>
              <xs:element minOccurs="0" name="PagingToken" nillable="true" type="tns:DataSourceListToken"/>
              <xs:element minOccurs="0" name="SortBy" type="tns:DataSourceListColumnType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ListDataSourcesRequest" nillable="true" type="tns:ListDataSourcesRequest"/>
      <xs:complexType name="DataSourceListFilterNode">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="DataSourceListFilterNode" nillable="true" type="tns:DataSourceListFilterNode"/>
      <xs:complexType name="DataSourceListFilterComparisonNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceListFilterNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="ComparisonOperator" type="tns:DataSourceListFilterComparisonType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceListFilterComparisonNode" nillable="true" type="tns:DataSourceListFilterComparisonNode"/>
      <xs:simpleType name="DataSourceListFilterComparisonType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Equal"/>
          <xs:enumeration value="LessThan"/>
          <xs:enumeration value="GreaterThan"/>
          <xs:enumeration value="LessThanOrEqual"/>
          <xs:enumeration value="GreaterThanOrEqual"/>
          <xs:enumeration value="Like"/>
          <xs:enumeration value="Is"/>
          <xs:enumeration value="IsNot"/>
          <xs:enumeration value="IsNull"/>
          <xs:enumeration value="NotEqual"/>
          <xs:enumeration value="In"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DataSourceListFilterComparisonType" nillable="true" type="tns:DataSourceListFilterComparisonType"/>
      <xs:complexType name="DataSourceListFilterCompanyName">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceListFilterCompanyName" nillable="true" type="tns:DataSourceListFilterCompanyName"/>
      <xs:complexType name="DataSourceListFilterCreatedDate">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" type="xs:dateTime"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceListFilterCreatedDate" nillable="true" type="tns:DataSourceListFilterCreatedDate"/>
      <xs:complexType name="DataSourceListFilterCreatedBy">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceListFilterCreatedBy" nillable="true" type="tns:DataSourceListFilterCreatedBy"/>
      <xs:complexType name="DataSourceListFilterDataSourceName">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceListFilterDataSourceName" nillable="true" type="tns:DataSourceListFilterDataSourceName"/>
      <xs:complexType name="DataSourceListFilterDataSourceNumber">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceListFilterComparisonNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="Value" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceListFilterDataSourceNumber" nillable="true" type="tns:DataSourceListFilterDataSourceNumber"/>
      <xs:complexType name="DataSourceListFilterLogicNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceListFilterNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="OperatorType" type="tns:DataSourceListFilterLogicType"/>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfDataSourceListFilterNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceListFilterLogicNode" nillable="true" type="tns:DataSourceListFilterLogicNode"/>
      <xs:simpleType name="DataSourceListFilterLogicType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="And"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DataSourceListFilterLogicType" nillable="true" type="tns:DataSourceListFilterLogicType"/>
      <xs:complexType name="ArrayOfDataSourceListFilterNode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DataSourceListFilterNode" nillable="true" type="tns:DataSourceListFilterNode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfDataSourceListFilterNode" nillable="true" type="tns:ArrayOfDataSourceListFilterNode"/>
      <xs:complexType name="DataSourceListToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="StartId" type="ser:guid"/>
          <xs:element minOccurs="0" name="EndId" type="ser:guid"/>
          <xs:element minOccurs="0" name="StartValue" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="EndValue" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="PagingForward" type="xs:boolean"/>
          <xs:element minOccurs="0" name="NumberOfRows" type="xs:int"/>
          <xs:element minOccurs="0" name="AtEnd" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DataSourceListToken" nillable="true" type="tns:DataSourceListToken"/>
      <xs:simpleType name="DataSourceListColumnType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Number"/>
          <xs:enumeration value="Name"/>
          <xs:enumeration value="CreatedDate"/>
          <xs:enumeration value="CreatedBy"/>
          <xs:enumeration value="CompanyName"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DataSourceListColumnType" nillable="true" type="tns:DataSourceListColumnType"/>
      <xs:complexType name="DeleteDataSourceRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSourceId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DeleteDataSourceRequest" nillable="true" type="tns:DeleteDataSourceRequest"/>
      <xs:complexType name="CreateDataSourceRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSource" nillable="true" type="tns:DataSource"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateDataSourceRequest" nillable="true" type="tns:CreateDataSourceRequest"/>
      <xs:complexType name="DataSource">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Number" type="xs:int"/>
          <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfDataSourceNode"/>
          <xs:element minOccurs="0" name="Projects" nillable="true" type="tns:ArrayOfDataSourceProject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DataSource" nillable="true" type="tns:DataSource"/>
      <xs:complexType name="ArrayOfDataSourceNode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DataSourceNode" nillable="true" type="tns:DataSourceNode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfDataSourceNode" nillable="true" type="tns:ArrayOfDataSourceNode"/>
      <xs:complexType name="DataSourceNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="UserDefinedId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Banners" nillable="true" type="tns:ArrayOfHeaderBanner"/>
          <xs:element minOccurs="0" name="Categorizations" nillable="true" type="tns:ArrayOfCategorization"/>
          <xs:element minOccurs="0" name="RecodedVariables" nillable="true" type="tns:ArrayOfRecodedVariable"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DataSourceNode" nillable="true" type="tns:DataSourceNode"/>
      <xs:complexType name="ArrayOfHeaderBanner">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="HeaderBanner" nillable="true" type="tns:HeaderBanner"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfHeaderBanner" nillable="true" type="tns:ArrayOfHeaderBanner"/>
      <xs:complexType name="ArrayOfCategorization">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Categorization" nillable="true" type="tns:Categorization"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfCategorization" nillable="true" type="tns:ArrayOfCategorization"/>
      <xs:complexType name="Categorization">
        <xs:sequence>
          <xs:element minOccurs="0" name="Titles" nillable="true" type="tns:ArrayOfLanguageText"/>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Elements" nillable="true" type="tns:ArrayOfQuestionnaireElement"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Categorization" nillable="true" type="tns:Categorization"/>
      <xs:complexType name="ArrayOfQuestionnaireElement">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="QuestionnaireElement" nillable="true" type="tns:QuestionnaireElement"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfQuestionnaireElement" nillable="true" type="tns:ArrayOfQuestionnaireElement"/>
      <xs:complexType name="ArrayOfRecodedVariable">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RecodedVariable" nillable="true" type="tns:RecodedVariable"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfRecodedVariable" nillable="true" type="tns:ArrayOfRecodedVariable"/>
      <xs:complexType name="RecodedVariable">
        <xs:sequence>
          <xs:element minOccurs="0" name="FormId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ProjectID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="IsTemplate" type="xs:boolean"/>
          <xs:element minOccurs="0" name="TemplateId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="DataSourceFormType" type="xs:int"/>
          <xs:element minOccurs="0" name="Categories" nillable="true" type="tns:ArrayOfRecodedCategory"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="RecodedVariable" nillable="true" type="tns:RecodedVariable"/>
      <xs:complexType name="ArrayOfRecodedCategory">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="RecodedCategory" nillable="true" type="tns:RecodedCategory"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfRecodedCategory" nillable="true" type="tns:ArrayOfRecodedCategory"/>
      <xs:complexType name="RecodedCategory">
        <xs:sequence>
          <xs:element minOccurs="0" name="FormId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Titles" nillable="true" type="tns:ArrayOfLanguageText"/>
          <xs:element minOccurs="0" name="Precode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="IsOther" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="IsMasked" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="RecodedCategory" nillable="true" type="tns:RecodedCategory"/>
      <xs:complexType name="RecodedNumericCategory">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RecodedCategory">
            <xs:sequence>
              <xs:element minOccurs="0" name="LowerLimit" type="xs:double"/>
              <xs:element minOccurs="0" name="UpperLimit" type="xs:double"/>
              <xs:element minOccurs="0" name="LowerLimitOperator" type="tns:LowerLimitDataType"/>
              <xs:element minOccurs="0" name="UpperLimitOperator" type="tns:UpperLimitDataType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RecodedNumericCategory" nillable="true" type="tns:RecodedNumericCategory"/>
      <xs:simpleType name="LowerLimitDataType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Disabled"/>
          <xs:enumeration value="Greater"/>
          <xs:enumeration value="GreaterOrEqual"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="LowerLimitDataType" nillable="true" type="tns:LowerLimitDataType"/>
      <xs:simpleType name="UpperLimitDataType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Disabled"/>
          <xs:enumeration value="Smaller"/>
          <xs:enumeration value="SmallerOrEqual"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="UpperLimitDataType" nillable="true" type="tns:UpperLimitDataType"/>
      <xs:complexType name="RecodedSingleCategory">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RecodedCategory">
            <xs:sequence>
              <xs:element xmlns:q11="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="Precodes" nillable="true" type="q11:ArrayOfstring"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RecodedSingleCategory" nillable="true" type="tns:RecodedSingleCategory"/>
      <xs:complexType name="DataSourceProjectNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSourceProjectId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceProjectNode" nillable="true" type="tns:DataSourceProjectNode"/>
      <xs:complexType name="DataSourceJoinNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="ProjectLinks" nillable="true" type="tns:ArrayOfJoinNodeProjectLink"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceJoinNode" nillable="true" type="tns:DataSourceJoinNode"/>
      <xs:complexType name="ArrayOfJoinNodeProjectLink">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="JoinNodeProjectLink" nillable="true" type="tns:JoinNodeProjectLink"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfJoinNodeProjectLink" nillable="true" type="tns:ArrayOfJoinNodeProjectLink"/>
      <xs:complexType name="JoinNodeProjectLink">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ProjectLink">
            <xs:sequence>
              <xs:element xmlns:q12="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="JoinKeys" nillable="true" type="q12:ArrayOfstring"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="JoinNodeProjectLink" nillable="true" type="tns:JoinNodeProjectLink"/>
      <xs:complexType name="ProjectLink">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="DataSourceProjectId" type="ser:guid"/>
          <xs:element minOccurs="0" name="UserDefinedId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ProjectLink" nillable="true" type="tns:ProjectLink"/>
      <xs:complexType name="DataSourceUnionNode">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DataSourceNode">
            <xs:sequence>
              <xs:element minOccurs="0" name="ProjectLinks" nillable="true" type="tns:ArrayOfUnionNodeProjectLink"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DataSourceUnionNode" nillable="true" type="tns:DataSourceUnionNode"/>
      <xs:complexType name="ArrayOfUnionNodeProjectLink">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="UnionNodeProjectLink" nillable="true" type="tns:UnionNodeProjectLink"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfUnionNodeProjectLink" nillable="true" type="tns:ArrayOfUnionNodeProjectLink"/>
      <xs:complexType name="UnionNodeProjectLink">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ProjectLink">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UnionNodeProjectLink" nillable="true" type="tns:UnionNodeProjectLink"/>
      <xs:complexType name="ArrayOfDataSourceProject">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DataSourceProject" nillable="true" type="tns:DataSourceProject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfDataSourceProject" nillable="true" type="tns:ArrayOfDataSourceProject"/>
      <xs:complexType name="DataSourceProject">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" type="ser:guid"/>
          <xs:element minOccurs="0" name="ProjectCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="OverridedTexts" nillable="true" type="tns:ArrayOfOverridedText"/>
          <xs:element minOccurs="0" name="AnswerColors" nillable="true" type="tns:ArrayOfAnswerColor"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DataSourceProject" nillable="true" type="tns:DataSourceProject"/>
      <xs:complexType name="ArrayOfOverridedText">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="OverridedText" nillable="true" type="tns:OverridedText"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfOverridedText" nillable="true" type="tns:ArrayOfOverridedText"/>
      <xs:complexType name="OverridedText">
        <xs:sequence>
          <xs:element minOccurs="0" name="FormId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Precode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="IsOther" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OverrideType" type="tns:OverridedTextType"/>
          <xs:element minOccurs="0" name="Texts" nillable="true" type="tns:ArrayOfLanguageText"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="OverridedText" nillable="true" type="tns:OverridedText"/>
      <xs:complexType name="ArrayOfAnswerColor">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AnswerColor" nillable="true" type="tns:AnswerColor"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfAnswerColor" nillable="true" type="tns:ArrayOfAnswerColor"/>
      <xs:complexType name="AnswerColor">
        <xs:sequence>
          <xs:element minOccurs="0" name="FormId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Precode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="AnswerType" type="tns:AnswerColorType"/>
          <xs:element minOccurs="0" name="Color" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="AnswerColor" nillable="true" type="tns:AnswerColor"/>
      <xs:complexType name="UpdateDataSourceRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataFilter" nillable="true" type="tns:DataSourceDataFilter"/>
              <xs:element minOccurs="0" name="DataSource" nillable="true" type="tns:DataSource"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateDataSourceRequest" nillable="true" type="tns:UpdateDataSourceRequest"/>
      <xs:complexType name="DataSourceDataFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="CategorizationsEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="BannersEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="RecodedVariablesEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="AnswerColorsEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OverridedTextsEnabled" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DataSourceDataFilter" nillable="true" type="tns:DataSourceDataFilter"/>
      <xs:complexType name="UpdateReportRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Report" nillable="true" type="tns:Report"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateReportRequest" nillable="true" type="tns:UpdateReportRequest"/>
      <xs:complexType name="UpdateAnalystNodeRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Node" nillable="true" type="tns:AnalystNode"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateAnalystNodeRequest" nillable="true" type="tns:UpdateAnalystNodeRequest"/>
      <xs:complexType name="UpdateStyleRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Style" nillable="true" type="tns:ReportComponentStyle"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateStyleRequest" nillable="true" type="tns:UpdateStyleRequest"/>
      <xs:complexType name="UpdateFilterNodesRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfFilterNode"/>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateFilterNodesRequest" nillable="true" type="tns:UpdateFilterNodesRequest"/>
      <xs:complexType name="UpdateAnalystTableRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Table" nillable="true" type="tns:Table"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateAnalystTableRequest" nillable="true" type="tns:UpdateAnalystTableRequest"/>
      <xs:complexType name="GetReportPermissionsRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element name="ReportNumber" type="xs:int"/>
              <xs:element name="UserType" type="tns:UserType"/>
              <xs:element minOccurs="0" name="Filter" nillable="true" type="tns:GetReportPermissionRequestFilter"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetReportPermissionsRequest" nillable="true" type="tns:GetReportPermissionsRequest"/>
      <xs:simpleType name="UserType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Enduser"/>
          <xs:enumeration value="Panelist"/>
          <xs:enumeration value="Normal"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="UserType" nillable="true" type="tns:UserType"/>
      <xs:complexType name="GetReportPermissionRequestFilter">
        <xs:sequence>
          <xs:element xmlns:q13="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="UserIds" nillable="true" type="q13:ArrayOfint"/>
          <xs:element minOccurs="0" name="Role" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="EnduserListId" type="xs:int"/>
          <xs:element minOccurs="0" name="PermissionType" type="tns:PortalUserPermissionType"/>
          <xs:element minOccurs="0" name="UserName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetReportPermissionRequestFilter" nillable="true" type="tns:GetReportPermissionRequestFilter"/>
      <xs:simpleType name="PortalUserPermissionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotSet"/>
          <xs:enumeration value="None"/>
          <xs:enumeration value="View"/>
          <xs:enumeration value="Analyst"/>
          <xs:enumeration value="Design"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="PortalUserPermissionType" nillable="true" type="tns:PortalUserPermissionType"/>
      <xs:complexType name="UpdateReportPermissionsRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element name="ReportNumber" type="xs:int"/>
              <xs:element name="UserType" type="tns:UserType"/>
              <xs:element minOccurs="0" name="PanelistPermissions" nillable="true" type="tns:PanelistPermissionCollection"/>
              <xs:element minOccurs="0" name="EnduserPermissions" nillable="true" type="tns:EnduserPermissionCollection"/>
              <xs:element minOccurs="0" name="NormalUserPermission" nillable="true" type="tns:NormalUserPermission"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateReportPermissionsRequest" nillable="true" type="tns:UpdateReportPermissionsRequest"/>
      <xs:complexType name="PanelistPermissionCollection">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:PortalUserPermissionCollection">
            <xs:sequence>
              <xs:element minOccurs="0" name="PortalId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="PanelistSettings" nillable="true" type="tns:ArrayOfPanelistReportSettings"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="PanelistPermissionCollection" nillable="true" type="tns:PanelistPermissionCollection"/>
      <xs:complexType name="PortalUserPermissionCollection">
        <xs:sequence>
          <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
          <xs:element minOccurs="0" name="ReportNumber" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="PortalUserPermissionCollection" nillable="true" type="tns:PortalUserPermissionCollection"/>
      <xs:complexType name="ArrayOfPanelistReportSettings">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PanelistReportSettings" nillable="true" type="tns:PanelistReportSettings"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfPanelistReportSettings" nillable="true" type="tns:ArrayOfPanelistReportSettings"/>
      <xs:complexType name="PanelistReportSettings">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:PortalUserReportSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="PanelistId" type="xs:int"/>
              <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="PanelistReportSettings" nillable="true" type="tns:PanelistReportSettings"/>
      <xs:complexType name="PortalUserReportSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="UserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="PermissionType" type="tns:PortalUserPermissionType"/>
          <xs:element minOccurs="0" name="Role" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ExpiryDate" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="ExportUnits" type="xs:int"/>
          <xs:element minOccurs="0" name="ReportBase" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="TableName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="PortalUserReportSettings" nillable="true" type="tns:PortalUserReportSettings"/>
      <xs:complexType name="EnduserPermissionCollection">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:PortalUserPermissionCollection">
            <xs:sequence>
              <xs:element minOccurs="0" name="EnduserListId" type="xs:int"/>
              <xs:element minOccurs="0" name="EnduserListName" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="EnduserSettings" nillable="true" type="tns:ArrayOfEnduserReportSettings"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EnduserPermissionCollection" nillable="true" type="tns:EnduserPermissionCollection"/>
      <xs:complexType name="ArrayOfEnduserReportSettings">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="EnduserReportSettings" nillable="true" type="tns:EnduserReportSettings"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfEnduserReportSettings" nillable="true" type="tns:ArrayOfEnduserReportSettings"/>
      <xs:complexType name="EnduserReportSettings">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:PortalUserReportSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="EnduserId" type="xs:int"/>
              <xs:element minOccurs="0" name="FirstName" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="LastName" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EnduserReportSettings" nillable="true" type="tns:EnduserReportSettings"/>
      <xs:complexType name="NormalUserPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="PermissionType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="UserName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="NormalUserPermission" nillable="true" type="tns:NormalUserPermission"/>
      <xs:complexType name="UpdatePresentationRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
              <xs:element minOccurs="0" name="Language" type="xs:int"/>
              <xs:element minOccurs="0" name="Origin" type="tns:ReportingMode"/>
              <xs:element minOccurs="0" name="Presentation" nillable="true" type="xs:base64Binary"/>
              <xs:element minOccurs="0" name="IgnoreShapeSize" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdatePresentationRequest" nillable="true" type="tns:UpdatePresentationRequest"/>
      <xs:complexType name="AssignTestReportingLicencesForCompanyRequest">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RequestBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="AssignTestReportingLicencesForCompanyRequest" nillable="true" type="tns:AssignTestReportingLicencesForCompanyRequest"/>
      <xs:element name="GetDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetDataSourceResult" nillable="true" type="tns:GetDataSourceResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetDataSourceResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSource" nillable="true" type="tns:DataSource"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetDataSourceResult" nillable="true" type="tns:GetDataSourceResult"/>
      <xs:complexType name="ResultBase">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="ResultBase" nillable="true" type="tns:ResultBase"/>
      <xs:complexType name="CreateTemplateBasedReportResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Report" nillable="true" type="tns:Report"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateTemplateBasedReportResult" nillable="true" type="tns:CreateTemplateBasedReportResult"/>
      <xs:complexType name="GetReportDefinitionResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportDefinitionXml" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetReportDefinitionResult" nillable="true" type="tns:GetReportDefinitionResult"/>
      <xs:complexType name="RenderResultBase">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="IsHidden" type="xs:boolean"/>
              <xs:element minOccurs="0" name="SerializedDynamicReportState" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderResultBase" nillable="true" type="tns:RenderResultBase"/>
      <xs:complexType name="RenderActiveFilterSummaryResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Html" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="CSSStyleClass" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="CSSStyle" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="RenderedObject" nillable="true" type="tns:RenderedActiveFilterSummary"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderActiveFilterSummaryResult" nillable="true" type="tns:RenderActiveFilterSummaryResult"/>
      <xs:complexType name="RenderedActiveFilterSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="CustomFilters" nillable="true" type="tns:CustomFilters"/>
          <xs:element minOccurs="0" name="PersonalizedNode" nillable="true" type="tns:FilterSummaryPersonalized"/>
          <xs:element minOccurs="0" name="DrilldownFilter" nillable="true" type="tns:FilterSummaryDrilldown"/>
          <xs:element minOccurs="0" name="Parameters" nillable="true" type="tns:FilterSummaryParameters"/>
          <xs:element minOccurs="0" name="Benchmark" nillable="true" type="tns:FilterSummaryBenchmark"/>
          <xs:element minOccurs="0" name="PageFilters" nillable="true" type="tns:PageFilters"/>
          <xs:element minOccurs="0" name="ExtendedFilters" nillable="true" type="tns:ExtendedFilters"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="RenderedActiveFilterSummary" nillable="true" type="tns:RenderedActiveFilterSummary"/>
      <xs:complexType name="CustomFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="FilterHeader" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="CustomFilterList" nillable="true" type="tns:ArrayOfCustomFilter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CustomFilters" nillable="true" type="tns:CustomFilters"/>
      <xs:complexType name="ArrayOfCustomFilter">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="CustomFilter" nillable="true" type="tns:CustomFilter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfCustomFilter" nillable="true" type="tns:ArrayOfCustomFilter"/>
      <xs:complexType name="CustomFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="QuestionTitle" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CustomFilter" nillable="true" type="tns:CustomFilter"/>
      <xs:complexType name="HierarchyFilter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:CustomFilter">
            <xs:sequence>
              <xs:element xmlns:q14="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="AnswerTexts" nillable="true" type="q14:ArrayOfstring"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="HierarchyFilter" nillable="true" type="tns:HierarchyFilter"/>
      <xs:complexType name="FlatFilter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:CustomFilter">
            <xs:sequence>
              <xs:element minOccurs="0" name="PrecodesAndTexts" nillable="true" type="tns:ArrayOfPrecodeAndText"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FlatFilter" nillable="true" type="tns:FlatFilter"/>
      <xs:complexType name="ArrayOfPrecodeAndText">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PrecodeAndText" nillable="true" type="tns:PrecodeAndText"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfPrecodeAndText" nillable="true" type="tns:ArrayOfPrecodeAndText"/>
      <xs:complexType name="PrecodeAndText">
        <xs:sequence>
          <xs:element minOccurs="0" name="Precode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="AnswerText" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="PrecodeAndText" nillable="true" type="tns:PrecodeAndText"/>
      <xs:complexType name="DateRangeFilter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DateFilter">
            <xs:sequence>
              <xs:element minOccurs="0" name="RangeLabel" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DateRangeFilter" nillable="true" type="tns:DateRangeFilter"/>
      <xs:complexType name="DateFilter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:CustomFilter">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DateFilter" nillable="true" type="tns:DateFilter"/>
      <xs:complexType name="DatePickerFilter">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:DateFilter">
            <xs:sequence>
              <xs:element minOccurs="0" name="StartText" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="EndText" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="StartOperator" type="tns:ComparisonOperatorType"/>
              <xs:element minOccurs="0" name="EndOperator" type="tns:ComparisonOperatorType"/>
              <xs:element minOccurs="0" name="StartOperatorText" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="EndOperatorText" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="StartDate" type="xs:dateTime"/>
              <xs:element minOccurs="0" name="EndDate" type="xs:dateTime"/>
              <xs:element minOccurs="0" name="IsStartDateSet" type="xs:boolean"/>
              <xs:element minOccurs="0" name="IsEndDateSet" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DatePickerFilter" nillable="true" type="tns:DatePickerFilter"/>
      <xs:complexType name="FilterSummaryPersonalized">
        <xs:sequence>
          <xs:element minOccurs="0" name="FilterHeader" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="QuestionTitle" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="NodeText" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FilterSummaryPersonalized" nillable="true" type="tns:FilterSummaryPersonalized"/>
      <xs:complexType name="FilterSummaryDrilldown">
        <xs:sequence>
          <xs:element minOccurs="0" name="PathHeader" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Text" nillable="true" type="xs:string"/>
          <xs:element xmlns:q15="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="AnswerText" nillable="true" type="q15:ArrayOfstring"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FilterSummaryDrilldown" nillable="true" type="tns:FilterSummaryDrilldown"/>
      <xs:complexType name="FilterSummaryParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="Header" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Parameters" nillable="true" type="tns:ArrayOfFilterSummaryParameter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FilterSummaryParameters" nillable="true" type="tns:FilterSummaryParameters"/>
      <xs:complexType name="ArrayOfFilterSummaryParameter">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="FilterSummaryParameter" nillable="true" type="tns:FilterSummaryParameter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfFilterSummaryParameter" nillable="true" type="tns:ArrayOfFilterSummaryParameter"/>
      <xs:complexType name="FilterSummaryParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="Ident" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Label" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ValueLabel" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FilterSummaryParameter" nillable="true" type="tns:FilterSummaryParameter"/>
      <xs:complexType name="FilterSummaryBenchmark">
        <xs:sequence>
          <xs:element minOccurs="0" name="Header" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Label" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ProjectId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FilterSummaryBenchmark" nillable="true" type="tns:FilterSummaryBenchmark"/>
      <xs:complexType name="PageFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="FilterHeader" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="PageFilterList" nillable="true" type="tns:ArrayOfPageFilter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="PageFilters" nillable="true" type="tns:PageFilters"/>
      <xs:complexType name="ArrayOfPageFilter">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PageFilter" nillable="true" type="tns:PageFilter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfPageFilter" nillable="true" type="tns:ArrayOfPageFilter"/>
      <xs:complexType name="PageFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="FlatFilter" nillable="true" type="tns:CustomFilter"/>
          <xs:element minOccurs="0" name="DateFilter" nillable="true" type="tns:CustomFilter"/>
          <xs:element minOccurs="0" name="NodeId" type="ser:guid"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="PageFilter" nillable="true" type="tns:PageFilter"/>
      <xs:complexType name="ExtendedFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="FilterHeader" nillable="true" type="xs:string"/>
          <xs:element xmlns:q16="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="ExtendedFilterNames" nillable="true" type="q16:ArrayOfstring"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ExtendedFilters" nillable="true" type="tns:ExtendedFilters"/>
      <xs:complexType name="RenderTextResultBase">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Text" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="StyleClass" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="Style" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderTextResultBase" nillable="true" type="tns:RenderTextResultBase"/>
      <xs:complexType name="RenderQuestionnaireTextResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderTextResultBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderQuestionnaireTextResult" nillable="true" type="tns:RenderQuestionnaireTextResult"/>
      <xs:complexType name="RenderPageTitleResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderTextResultBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderPageTitleResult" nillable="true" type="tns:RenderPageTitleResult"/>
      <xs:complexType name="RenderTextResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderTextResultBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderTextResult" nillable="true" type="tns:RenderTextResult"/>
      <xs:complexType name="RenderGaugeResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Image" nillable="true" type="xs:base64Binary"/>
              <xs:element minOccurs="0" name="ImageFormat" type="tns:ImageFormat"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderGaugeResult" nillable="true" type="tns:RenderGaugeResult"/>
      <xs:complexType name="RenderChartResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Image" nillable="true" type="xs:base64Binary"/>
              <xs:element minOccurs="0" name="ImageFormat" type="tns:ImageFormat"/>
              <xs:element minOccurs="0" name="ChartData" nillable="true" type="tns:ChartData"/>
              <xs:element minOccurs="0" name="Chart" nillable="true" type="tns:Chart"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderChartResult" nillable="true" type="tns:RenderChartResult"/>
      <xs:complexType name="ChartData">
        <xs:sequence>
          <xs:element minOccurs="0" name="ChartTitle" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SeriesData" nillable="true" type="tns:SeriesDataCollection"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartData" nillable="true" type="tns:ChartData"/>
      <xs:complexType name="SeriesDataCollection">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="SeriesData" nillable="true" type="tns:SeriesData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="SeriesDataCollection" nillable="true" type="tns:SeriesDataCollection"/>
      <xs:complexType name="SeriesData">
        <xs:sequence>
          <xs:element minOccurs="0" name="ChartArea" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ToolTip" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="LegendText" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="LegendToolTip" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SeriesColor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="DataPoints" nillable="true" type="tns:ChartDataPointCollection"/>
          <xs:element minOccurs="0" name="SeriesLayout" nillable="true" type="tns:ChartSeriesLayout"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="SeriesData" nillable="true" type="tns:SeriesData"/>
      <xs:complexType name="ChartDataPointCollection">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ChartDataPoint" nillable="true" type="tns:ChartDataPoint"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartDataPointCollection" nillable="true" type="tns:ChartDataPointCollection"/>
      <xs:complexType name="ChartDataPoint">
        <xs:sequence>
          <xs:element minOccurs="0" name="XValue" type="xs:double"/>
          <xs:element minOccurs="0" name="YValue" type="xs:double"/>
          <xs:element minOccurs="0" name="ZValue" type="xs:double"/>
          <xs:element minOccurs="0" name="Color" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="AxisLabel" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Formatting" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ChartDataPoint" nillable="true" type="tns:ChartDataPoint"/>
      <xs:complexType name="SeriesBasedSeriesData">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:SeriesData">
            <xs:sequence>
              <xs:element minOccurs="0" name="OrgTableAreaId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SeriesBasedSeriesData" nillable="true" type="tns:SeriesBasedSeriesData"/>
      <xs:complexType name="CategoryBasedSeriesData">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:SeriesData">
            <xs:sequence>
              <xs:element minOccurs="0" name="DimensionCategory" type="tns:DimensionCategoryType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CategoryBasedSeriesData" nillable="true" type="tns:CategoryBasedSeriesData"/>
      <xs:simpleType name="DimensionCategoryType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Benchmark"/>
          <xs:enumeration value="Total"/>
          <xs:enumeration value="Average"/>
          <xs:enumeration value="Deviation"/>
          <xs:enumeration value="Variance"/>
          <xs:enumeration value="Distribution"/>
          <xs:enumeration value="HierarchySelf"/>
          <xs:enumeration value="HierarchySelfExclusive"/>
          <xs:enumeration value="HierarchyParent"/>
          <xs:enumeration value="HierarchySibling"/>
          <xs:enumeration value="HierarchyChild"/>
          <xs:enumeration value="Categorization"/>
          <xs:enumeration value="Field"/>
          <xs:enumeration value="Count"/>
          <xs:enumeration value="Min"/>
          <xs:enumeration value="Max"/>
          <xs:enumeration value="Formula"/>
          <xs:enumeration value="Base"/>
          <xs:enumeration value="Segment"/>
          <xs:enumeration value="Mode"/>
          <xs:enumeration value="Median"/>
          <xs:enumeration value="StdError"/>
          <xs:enumeration value="Correlation"/>
          <xs:enumeration value="Nets"/>
          <xs:enumeration value="TotalMentions"/>
          <xs:enumeration value="WeightedMedian"/>
          <xs:enumeration value="WeightedMode"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DimensionCategoryType" nillable="true" type="tns:DimensionCategoryType"/>
      <xs:complexType name="CategoryBasedChartData">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ChartData">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CategoryBasedChartData" nillable="true" type="tns:CategoryBasedChartData"/>
      <xs:complexType name="SeriesBasedChartData">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ChartData">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SeriesBasedChartData" nillable="true" type="tns:SeriesBasedChartData"/>
      <xs:complexType name="CreatePageComponentsResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Components" nillable="true" type="tns:ArrayOfWysiwygComponent"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreatePageComponentsResult" nillable="true" type="tns:CreatePageComponentsResult"/>
      <xs:complexType name="BatchResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Results" nillable="true" type="tns:ArrayOfExecutionResult"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BatchResult" nillable="true" type="tns:BatchResult"/>
      <xs:complexType name="ArrayOfExecutionResult">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ExecutionResult" nillable="true" type="tns:ExecutionResult"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfExecutionResult" nillable="true" type="tns:ArrayOfExecutionResult"/>
      <xs:complexType name="ExecutionResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="Result" nillable="true" type="tns:ResultBase"/>
          <xs:element minOccurs="0" name="FailureMessage" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ExecutionResult" nillable="true" type="tns:ExecutionResult"/>
      <xs:complexType name="CreateFilterNodesResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfFilterNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateFilterNodesResult" nillable="true" type="tns:CreateFilterNodesResult"/>
      <xs:complexType name="CreateReportTreeNodesResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfReportTreeNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateReportTreeNodesResult" nillable="true" type="tns:CreateReportTreeNodesResult"/>
      <xs:complexType name="GetFilterNodeResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Node" nillable="true" type="tns:FilterNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetFilterNodeResult" nillable="true" type="tns:GetFilterNodeResult"/>
      <xs:complexType name="CreateReportFromTemplateResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Report" nillable="true" type="tns:Report"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateReportFromTemplateResult" nillable="true" type="tns:CreateReportFromTemplateResult"/>
      <xs:complexType name="GetPageComponentResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Component" nillable="true" type="tns:WysiwygComponent"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetPageComponentResult" nillable="true" type="tns:GetPageComponentResult"/>
      <xs:complexType name="GetReportTreeNodeResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Node" nillable="true" type="tns:ReportTreeNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetReportTreeNodeResult" nillable="true" type="tns:GetReportTreeNodeResult"/>
      <xs:complexType name="RenderTableResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:RenderResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Html" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="CSSStyle" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RenderTableResult" nillable="true" type="tns:RenderTableResult"/>
      <xs:complexType name="ListStylesResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Styles" nillable="true" type="tns:ArrayOfStyleDescription"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ListStylesResult" nillable="true" type="tns:ListStylesResult"/>
      <xs:complexType name="ArrayOfStyleDescription">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="StyleDescription" nillable="true" type="tns:StyleDescription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfStyleDescription" nillable="true" type="tns:ArrayOfStyleDescription"/>
      <xs:complexType name="StyleDescription">
        <xs:sequence>
          <xs:element name="Id" type="ser:guid"/>
          <xs:element name="Name" nillable="true" type="xs:string"/>
          <xs:element name="StyleType" type="tns:StyleType"/>
          <xs:element name="IsDefault" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="StyleDescription" nillable="true" type="tns:StyleDescription"/>
      <xs:simpleType name="StyleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AggregatedTableStyle"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="StyleType" nillable="true" type="tns:StyleType"/>
      <xs:complexType name="CreateAnalystNodesResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfAnalystNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateAnalystNodesResult" nillable="true" type="tns:CreateAnalystNodesResult"/>
      <xs:complexType name="CreateStyleResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="StyleId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateStyleResult" nillable="true" type="tns:CreateStyleResult"/>
      <xs:complexType name="GetAnalystTableResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Table" nillable="true" type="tns:Table"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetAnalystTableResult" nillable="true" type="tns:GetAnalystTableResult"/>
      <xs:complexType name="GetAnalystNodeResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Node" nillable="true" type="tns:AnalystNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetAnalystNodeResult" nillable="true" type="tns:GetAnalystNodeResult"/>
      <xs:complexType name="CreateReportResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateReportResult" nillable="true" type="tns:CreateReportResult"/>
      <xs:complexType name="GetReportResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Report" nillable="true" type="tns:Report"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetReportResult" nillable="true" type="tns:GetReportResult"/>
      <xs:complexType name="GetStyleResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Style" nillable="true" type="tns:ReportComponentStyle"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetStyleResult" nillable="true" type="tns:GetStyleResult"/>
      <xs:complexType name="ListReportsResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReportDescriptions" nillable="true" type="tns:ArrayOfReportDescription"/>
              <xs:element minOccurs="0" name="PagingToken" nillable="true" type="tns:ReportListToken"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ListReportsResult" nillable="true" type="tns:ListReportsResult"/>
      <xs:complexType name="ArrayOfReportDescription">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ReportDescription" nillable="true" type="tns:ReportDescription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfReportDescription" nillable="true" type="tns:ArrayOfReportDescription"/>
      <xs:complexType name="ReportDescription">
        <xs:sequence>
          <xs:element name="Id" type="ser:guid"/>
          <xs:element name="Number" type="xs:int"/>
          <xs:element name="Name" nillable="true" type="xs:string"/>
          <xs:element name="IsTemplate" type="xs:boolean"/>
          <xs:element minOccurs="0" name="CreatedDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="CreatedBy" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ReportDescription" nillable="true" type="tns:ReportDescription"/>
      <xs:complexType name="ListDataSourcesResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSources" nillable="true" type="tns:ArrayOfDataSource"/>
              <xs:element minOccurs="0" name="PagingToken" nillable="true" type="tns:DataSourceListToken"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ListDataSourcesResult" nillable="true" type="tns:ListDataSourcesResult"/>
      <xs:complexType name="ArrayOfDataSource">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DataSource" nillable="true" type="tns:DataSource"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfDataSource" nillable="true" type="tns:ArrayOfDataSource"/>
      <xs:complexType name="CreateDataSourceResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSourceId" type="ser:guid"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateDataSourceResult" nillable="true" type="tns:CreateDataSourceResult"/>
      <xs:complexType name="DeleteDataSourceResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DeleteDataSourceResult" nillable="true" type="tns:DeleteDataSourceResult"/>
      <xs:complexType name="UpdateDataSourceResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="DataSource" nillable="true" type="tns:DataSource"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateDataSourceResult" nillable="true" type="tns:UpdateDataSourceResult"/>
      <xs:complexType name="UpdateReportTreeNodeResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Node" nillable="true" type="tns:ReportTreeNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateReportTreeNodeResult" nillable="true" type="tns:UpdateReportTreeNodeResult"/>
      <xs:complexType name="UpdateReportResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Report" nillable="true" type="tns:Report"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateReportResult" nillable="true" type="tns:UpdateReportResult"/>
      <xs:complexType name="UpdateAnalystNodeResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Node" nillable="true" type="tns:AnalystNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateAnalystNodeResult" nillable="true" type="tns:UpdateAnalystNodeResult"/>
      <xs:complexType name="UpdateStyleResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Style" nillable="true" type="tns:ReportComponentStyle"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateStyleResult" nillable="true" type="tns:UpdateStyleResult"/>
      <xs:complexType name="UpdateFilterNodesResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Nodes" nillable="true" type="tns:ArrayOfFilterNode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateFilterNodesResult" nillable="true" type="tns:UpdateFilterNodesResult"/>
      <xs:complexType name="GetReportPermissionsResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="PanelistPermissions" nillable="true" type="tns:PanelistPermissionCollection"/>
              <xs:element minOccurs="0" name="EnduserPermissions" nillable="true" type="tns:EnduserPermissionCollection"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetReportPermissionsResult" nillable="true" type="tns:GetReportPermissionsResult"/>
      <xs:complexType name="UpdatePresentationResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:ResultBase">
            <xs:sequence>
              <xs:element minOccurs="0" name="Presentation" nillable="true" type="xs:base64Binary"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdatePresentationResult" nillable="true" type="tns:UpdatePresentationResult"/>
      <xs:complexType name="ComponentNotFoundFault">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="ComponentNotFoundFault" nillable="true" type="tns:ComponentNotFoundFault"/>
      <xs:element name="CreateDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreateDataSourceRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreateDataSourceResult" nillable="true" type="tns:CreateDataSourceResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:DeleteDataSourceRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteDataSourceResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListDataSources">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:ListDataSourcesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListDataSourcesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ListDataSourcesResult" nillable="true" type="tns:ListDataSourcesResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateDataSourceRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UpdateDataSourceResult" nillable="true" type="tns:UpdateDataSourceResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetStyle">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetStyleRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetStyleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetStyleResult" nillable="true" type="tns:GetStyleResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateStyle">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreateStyleRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateStyleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreateStyleResult" nillable="true" type="tns:CreateStyleResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteStyle">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:DeleteStyleRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteStyleResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListStyles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:ListStylesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListStylesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ListStylesResult" nillable="true" type="tns:ListStylesResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateStyle">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateStyleRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateStyleResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ImportRemoteReport">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:ImportRemoteReportRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ImportRemoteReportResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ImportRemoteReportResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportNumberByName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GenericRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportNumberByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetReportNumberByNameResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportEndUserListIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GenericRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportEndUserListIdsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q17="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="GetReportEndUserListIdsResult" nillable="true" type="q17:ArrayOfint"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPanelIdForReport">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GenericRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPanelIdForReportResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetPanelIdForReportResult" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetEnduserListIdByName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GenericRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetEnduserListIdByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetEnduserListIdByNameResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AssignPortalUserList">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:AssignPortalUserListRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AssignPortalUserListResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateEnduserList">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreateEndUserListRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateEnduserListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreateEnduserListResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReport">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetReportRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetReportResult" nillable="true" type="tns:GetReportResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportDefinitionXml">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetReportDefinitionRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportDefinitionXmlResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetReportDefinitionXmlResult" nillable="true" type="tns:GetReportDefinitionResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateReport">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreateReportRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateReportResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreateReportResult" nillable="true" type="tns:CreateReportResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateReportFromTemplate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreateReportFromTemplateRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateReportFromTemplateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreateReportFromTemplateResult" nillable="true" type="tns:CreateTemplateBasedReportResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteReport">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:DeleteReportRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteReportResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListReports">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:ListReportsRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListReportsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ListReportsResult" nillable="true" type="tns:ListReportsResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateReport">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateReportRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateReportResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAnalystNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetAnalystNodeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAnalystNodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetAnalystNodeResult" nillable="true" type="tns:GetAnalystNodeResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateAnalystNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreateAnalystNodesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateAnalystNodesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreateAnalystNodesResult" nillable="true" type="tns:CreateAnalystNodesResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateAnalystNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateAnalystNodeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateAnalystNodeResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteAnalystNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:DeleteAnalystNodeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteAnalystNodeResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="MoveAnalystNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:MoveAnalystNodeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="MoveAnalystNodeResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAnalystTable">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetAnalystTableRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAnalystTableResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetAnalystTableResult" nillable="true" type="tns:GetAnalystTableResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateAnalystTable">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateAnalystTableRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateAnalystTableResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateFilterNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreateFilterNodesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateFilterNodesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreateFilterNodesResult" nillable="true" type="tns:CreateFilterNodesResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetFilterNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetFilterNodeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetFilterNodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetFilterNodeResult" nillable="true" type="tns:GetFilterNodeResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateFilterNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateFilterNodesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateFilterNodesResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteFilterNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:DeleteFilterNodesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteFilterNodesResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="MoveFilterNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:MoveFilterNodesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="MoveFilterNodesResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportTreeNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetReportTreeNodeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportTreeNodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetReportTreeNodeResult" nillable="true" type="tns:GetReportTreeNodeResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateReportTreeNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreateReportTreeNodesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateReportTreeNodesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreateReportTreeNodesResult" nillable="true" type="tns:CreateReportTreeNodesResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteReportTreeNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:DeleteReportTreeNodeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteReportTreeNodeResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="MoveReportTreeNodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:MoveReportTreeNodesRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="MoveReportTreeNodesResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateReportTreeNode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateReportTreeNodeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateReportTreeNodeResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreatePageComponents">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:CreatePageComponentsRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreatePageComponentsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CreatePageComponentsResult" nillable="true" type="tns:CreatePageComponentsResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeletePageComponent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:DeletePageComponentRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeletePageComponentResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPageComponent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetPageComponentRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPageComponentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetPageComponentResult" nillable="true" type="tns:GetPageComponentResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ExecuteBatch">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:BatchRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ExecuteBatchResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ExecuteBatchResult" nillable="true" type="tns:BatchResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderTable">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:RenderTableRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderTableResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RenderTableResult" nillable="true" type="tns:RenderTableResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderPageTitle">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:RenderPageTitleRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderPageTitleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RenderPageTitleResult" nillable="true" type="tns:RenderPageTitleResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderActiveFilterSummary">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:RenderActiveFilterSummaryRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderActiveFilterSummaryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RenderActiveFilterSummaryResult" nillable="true" type="tns:RenderActiveFilterSummaryResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="RenderedObjectIsEmptyFault">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="RenderedObjectIsEmptyFault" nillable="true" type="tns:RenderedObjectIsEmptyFault"/>
      <xs:element name="RenderText">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:RenderTextRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderTextResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RenderTextResult" nillable="true" type="tns:RenderTextResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderQuestionnaireText">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:RenderQuestionnaireTextRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderQuestionnaireTextResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RenderQuestionnaireTextResult" nillable="true" type="tns:RenderQuestionnaireTextResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderGauge">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:RenderGaugeRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderGaugeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RenderGaugeResult" nillable="true" type="tns:RenderGaugeResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderChart">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:RenderChartRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenderChartResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RenderChartResult" nillable="true" type="tns:RenderChartResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportPermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:GetReportPermissionsRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetReportPermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetReportPermissionsResult" nillable="true" type="tns:GetReportPermissionsResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateReportPermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:UpdateReportPermissionsRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateReportPermissionsResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="AssignTestReportingLicencesForCompany">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="tns:AssignTestReportingLicencesForCompanyRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AssignTestReportingLicencesForCompanyResponse">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
      <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/"/>
      <xs:complexType name="ArrayOfguid">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="guid" type="ser:guid"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfguid" nillable="true" type="tns:ArrayOfguid"/>
      <xs:complexType name="ArrayOfanyType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="anyType" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfanyType" nillable="true" type="tns:ArrayOfanyType"/>
      <xs:complexType name="ArrayOfstring">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfstring" nillable="true" type="tns:ArrayOfstring"/>
      <xs:complexType name="ArrayOfint">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="int" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfint" nillable="true" type="tns:ArrayOfint"/>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.datacontract.org/2004/07/Confirmit.Reportal.Scripting.WebServiceSupport.StyleModel" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/Confirmit.Reportal.Scripting.WebServiceSupport.StyleModel">
      <xs:simpleType name="HdrVarSettingsHierarchy.HierarchyLayout">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Flat"/>
          <xs:enumeration value="Nested"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="HdrVarSettingsHierarchy.HierarchyLayout" nillable="true" type="tns:HdrVarSettingsHierarchy.HierarchyLayout"/>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.datacontract.org/2004/07/System" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/System">
      <xs:simpleType name="DayOfWeek">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Sunday"/>
          <xs:enumeration value="Monday"/>
          <xs:enumeration value="Tuesday"/>
          <xs:enumeration value="Wednesday"/>
          <xs:enumeration value="Thursday"/>
          <xs:enumeration value="Friday"/>
          <xs:enumeration value="Saturday"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DayOfWeek" nillable="true" type="tns:DayOfWeek"/>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" elementFormDefault="qualified" targetNamespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation">
      <xs:import namespace="http://schemas.datacontract.org/2004/07/Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF"/>
      <xs:complexType name="ValidationFault">
        <xs:sequence>
          <xs:element xmlns:q1="http://schemas.datacontract.org/2004/07/Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF" minOccurs="0" name="Details" nillable="true" type="q1:ArrayOfValidationDetail"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ValidationFault" nillable="true" type="tns:ValidationFault"/>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.datacontract.org/2004/07/Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF">
      <xs:complexType name="ArrayOfValidationDetail">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ValidationDetail" nillable="true" type="tns:ValidationDetail"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfValidationDetail" nillable="true" type="tns:ArrayOfValidationDetail"/>
      <xs:complexType name="ValidationDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="Key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="Tag" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ValidationDetail" nillable="true" type="tns:ValidationDetail"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="IReportingService_GetDataSource_InputMessage">
    <wsdl:part name="parameters" element="tns:GetDataSource"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetDataSource_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetDataSource_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetDataSource_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q1="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q1:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateDataSource_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateDataSource"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateDataSource_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateDataSource_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q2="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q2:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteDataSource_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDataSource"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteDataSource_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteDataSource_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q3="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q3:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListDataSources_InputMessage">
    <wsdl:part name="parameters" element="tns:ListDataSources"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListDataSources_OutputMessage">
    <wsdl:part name="parameters" element="tns:ListDataSourcesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListDataSources_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q4="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q4:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateDataSource_InputMessage">
    <wsdl:part name="parameters" element="tns:UpdateDataSource"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateDataSource_OutputMessage">
    <wsdl:part name="parameters" element="tns:UpdateDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateDataSource_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q5="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q5:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetStyle_InputMessage">
    <wsdl:part name="parameters" element="tns:GetStyle"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetStyle_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetStyleResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetStyle_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q6="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q6:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetStyle_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateStyle_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateStyle"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateStyle_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateStyleResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateStyle_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q7="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q7:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteStyle_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteStyle"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteStyle_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteStyleResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteStyle_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q8="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q8:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListStyles_InputMessage">
    <wsdl:part name="parameters" element="tns:ListStyles"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListStyles_OutputMessage">
    <wsdl:part name="parameters" element="tns:ListStylesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListStyles_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q9="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q9:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateStyle_InputMessage">
    <wsdl:part name="parameters" element="tns:UpdateStyle"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateStyle_OutputMessage">
    <wsdl:part name="parameters" element="tns:UpdateStyleResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateStyle_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q10="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q10:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ImportRemoteReport_InputMessage">
    <wsdl:part name="parameters" element="tns:ImportRemoteReport"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ImportRemoteReport_OutputMessage">
    <wsdl:part name="parameters" element="tns:ImportRemoteReportResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ImportRemoteReport_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ImportRemoteReport_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q11="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q11:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportNumberByName_InputMessage">
    <wsdl:part name="parameters" element="tns:GetReportNumberByName"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportNumberByName_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetReportNumberByNameResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportNumberByName_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q12="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q12:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportNumberByName_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportEndUserListIds_InputMessage">
    <wsdl:part name="parameters" element="tns:GetReportEndUserListIds"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportEndUserListIds_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetReportEndUserListIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportEndUserListIds_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q13="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q13:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportEndUserListIds_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetPanelIdForReport_InputMessage">
    <wsdl:part name="parameters" element="tns:GetPanelIdForReport"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetPanelIdForReport_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetPanelIdForReportResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetPanelIdForReport_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetPanelIdForReport_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q14="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q14:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetEnduserListIdByName_InputMessage">
    <wsdl:part name="parameters" element="tns:GetEnduserListIdByName"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetEnduserListIdByName_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetEnduserListIdByNameResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetEnduserListIdByName_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetEnduserListIdByName_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q15="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q15:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_AssignPortalUserList_InputMessage">
    <wsdl:part name="parameters" element="tns:AssignPortalUserList"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_AssignPortalUserList_OutputMessage">
    <wsdl:part name="parameters" element="tns:AssignPortalUserListResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_AssignPortalUserList_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_AssignPortalUserList_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q16="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q16:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateEnduserList_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateEnduserList"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateEnduserList_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateEnduserListResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateEnduserList_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateEnduserList_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q17="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q17:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReport_InputMessage">
    <wsdl:part name="parameters" element="tns:GetReport"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReport_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetReportResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReport_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReport_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q18="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q18:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportDefinitionXml_InputMessage">
    <wsdl:part name="parameters" element="tns:GetReportDefinitionXml"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportDefinitionXml_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetReportDefinitionXmlResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportDefinitionXml_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q19="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q19:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportDefinitionXml_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReport_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateReport"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReport_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateReportResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReport_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q20="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q20:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReportFromTemplate_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateReportFromTemplate"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReportFromTemplate_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateReportFromTemplateResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReportFromTemplate_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q21="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q21:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteReport_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteReport"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteReport_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteReportResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteReport_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q22="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q22:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListReports_InputMessage">
    <wsdl:part name="parameters" element="tns:ListReports"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListReports_OutputMessage">
    <wsdl:part name="parameters" element="tns:ListReportsResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ListReports_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q23="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q23:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReport_InputMessage">
    <wsdl:part name="parameters" element="tns:UpdateReport"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReport_OutputMessage">
    <wsdl:part name="parameters" element="tns:UpdateReportResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReport_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q24="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q24:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetAnalystNode_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAnalystNode"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetAnalystNode_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAnalystNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetAnalystNode_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q25="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q25:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetAnalystNode_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateAnalystNodes_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateAnalystNodes"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateAnalystNodes_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateAnalystNodesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateAnalystNodes_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q26="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q26:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateAnalystNode_InputMessage">
    <wsdl:part name="parameters" element="tns:UpdateAnalystNode"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateAnalystNode_OutputMessage">
    <wsdl:part name="parameters" element="tns:UpdateAnalystNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateAnalystNode_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q27="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q27:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteAnalystNode_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteAnalystNode"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteAnalystNode_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteAnalystNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteAnalystNode_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q28="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q28:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveAnalystNode_InputMessage">
    <wsdl:part name="parameters" element="tns:MoveAnalystNode"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveAnalystNode_OutputMessage">
    <wsdl:part name="parameters" element="tns:MoveAnalystNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveAnalystNode_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q29="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q29:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetAnalystTable_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAnalystTable"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetAnalystTable_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAnalystTableResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetAnalystTable_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q30="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q30:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetAnalystTable_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateAnalystTable_InputMessage">
    <wsdl:part name="parameters" element="tns:UpdateAnalystTable"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateAnalystTable_OutputMessage">
    <wsdl:part name="parameters" element="tns:UpdateAnalystTableResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateAnalystTable_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q31="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q31:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateFilterNodes_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateFilterNodes"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateFilterNodes_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateFilterNodesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateFilterNodes_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q32="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q32:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetFilterNode_InputMessage">
    <wsdl:part name="parameters" element="tns:GetFilterNode"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetFilterNode_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetFilterNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetFilterNode_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetFilterNode_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q33="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q33:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateFilterNodes_InputMessage">
    <wsdl:part name="parameters" element="tns:UpdateFilterNodes"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateFilterNodes_OutputMessage">
    <wsdl:part name="parameters" element="tns:UpdateFilterNodesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateFilterNodes_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q34="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q34:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteFilterNodes_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteFilterNodes"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteFilterNodes_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteFilterNodesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteFilterNodes_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q35="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q35:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveFilterNodes_InputMessage">
    <wsdl:part name="parameters" element="tns:MoveFilterNodes"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveFilterNodes_OutputMessage">
    <wsdl:part name="parameters" element="tns:MoveFilterNodesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveFilterNodes_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q36="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q36:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportTreeNode_InputMessage">
    <wsdl:part name="parameters" element="tns:GetReportTreeNode"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportTreeNode_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetReportTreeNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportTreeNode_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q37="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q37:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportTreeNode_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReportTreeNodes_InputMessage">
    <wsdl:part name="parameters" element="tns:CreateReportTreeNodes"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReportTreeNodes_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreateReportTreeNodesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreateReportTreeNodes_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q38="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q38:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteReportTreeNode_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteReportTreeNode"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteReportTreeNode_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteReportTreeNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeleteReportTreeNode_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q39="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q39:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveReportTreeNodes_InputMessage">
    <wsdl:part name="parameters" element="tns:MoveReportTreeNodes"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveReportTreeNodes_OutputMessage">
    <wsdl:part name="parameters" element="tns:MoveReportTreeNodesResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_MoveReportTreeNodes_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q40="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q40:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReportTreeNode_InputMessage">
    <wsdl:part name="parameters" element="tns:UpdateReportTreeNode"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReportTreeNode_OutputMessage">
    <wsdl:part name="parameters" element="tns:UpdateReportTreeNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReportTreeNode_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q41="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q41:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreatePageComponents_InputMessage">
    <wsdl:part name="parameters" element="tns:CreatePageComponents"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreatePageComponents_OutputMessage">
    <wsdl:part name="parameters" element="tns:CreatePageComponentsResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_CreatePageComponents_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q42="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q42:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeletePageComponent_InputMessage">
    <wsdl:part name="parameters" element="tns:DeletePageComponent"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeletePageComponent_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeletePageComponentResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_DeletePageComponent_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q43="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q43:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetPageComponent_InputMessage">
    <wsdl:part name="parameters" element="tns:GetPageComponent"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetPageComponent_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetPageComponentResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetPageComponent_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q44="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q44:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetPageComponent_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ExecuteBatch_InputMessage">
    <wsdl:part name="parameters" element="tns:ExecuteBatch"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_ExecuteBatch_OutputMessage">
    <wsdl:part name="parameters" element="tns:ExecuteBatchResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderTable_InputMessage">
    <wsdl:part name="parameters" element="tns:RenderTable"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderTable_OutputMessage">
    <wsdl:part name="parameters" element="tns:RenderTableResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderTable_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q45="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q45:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderTable_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderPageTitle_InputMessage">
    <wsdl:part name="parameters" element="tns:RenderPageTitle"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderPageTitle_OutputMessage">
    <wsdl:part name="parameters" element="tns:RenderPageTitleResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderPageTitle_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderActiveFilterSummary_InputMessage">
    <wsdl:part name="parameters" element="tns:RenderActiveFilterSummary"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderActiveFilterSummary_OutputMessage">
    <wsdl:part name="parameters" element="tns:RenderActiveFilterSummaryResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderActiveFilterSummary_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderActiveFilterSummary_RenderedObjectIsEmptyFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:RenderedObjectIsEmptyFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderText_InputMessage">
    <wsdl:part name="parameters" element="tns:RenderText"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderText_OutputMessage">
    <wsdl:part name="parameters" element="tns:RenderTextResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderText_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderQuestionnaireText_InputMessage">
    <wsdl:part name="parameters" element="tns:RenderQuestionnaireText"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderQuestionnaireText_OutputMessage">
    <wsdl:part name="parameters" element="tns:RenderQuestionnaireTextResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderQuestionnaireText_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderGauge_InputMessage">
    <wsdl:part name="parameters" element="tns:RenderGauge"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderGauge_OutputMessage">
    <wsdl:part name="parameters" element="tns:RenderGaugeResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderGauge_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderChart_InputMessage">
    <wsdl:part name="parameters" element="tns:RenderChart"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderChart_OutputMessage">
    <wsdl:part name="parameters" element="tns:RenderChartResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_RenderChart_ComponentNotFoundFaultFault_FaultMessage">
    <wsdl:part name="detail" element="tns:ComponentNotFoundFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportPermissions_InputMessage">
    <wsdl:part name="parameters" element="tns:GetReportPermissions"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportPermissions_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetReportPermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_GetReportPermissions_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q46="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q46:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReportPermissions_InputMessage">
    <wsdl:part name="parameters" element="tns:UpdateReportPermissions"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReportPermissions_OutputMessage">
    <wsdl:part name="parameters" element="tns:UpdateReportPermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_UpdateReportPermissions_ValidationFaultFault_FaultMessage">
    <wsdl:part xmlns:q47="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation" name="detail" element="q47:ValidationFault"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_AssignTestReportingLicencesForCompany_InputMessage">
    <wsdl:part name="parameters" element="tns:AssignTestReportingLicencesForCompany"/>
  </wsdl:message>
  <wsdl:message name="IReportingService_AssignTestReportingLicencesForCompany_OutputMessage">
    <wsdl:part name="parameters" element="tns:AssignTestReportingLicencesForCompanyResponse"/>
  </wsdl:message>
  <wsdl:portType name="IReportingService">
    <wsdl:operation name="GetDataSource">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetDataSource" message="tns:IReportingService_GetDataSource_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetDataSourceResponse" message="tns:IReportingService_GetDataSource_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetDataSourceComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetDataSource_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetDataSourceValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetDataSource_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreateDataSource">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateDataSource" message="tns:IReportingService_CreateDataSource_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateDataSourceResponse" message="tns:IReportingService_CreateDataSource_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateDataSourceValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreateDataSource_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteDataSource">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteDataSource" message="tns:IReportingService_DeleteDataSource_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteDataSourceResponse" message="tns:IReportingService_DeleteDataSource_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteDataSourceValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_DeleteDataSource_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="ListDataSources">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListDataSources" message="tns:IReportingService_ListDataSources_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListDataSourcesResponse" message="tns:IReportingService_ListDataSources_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListDataSourcesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_ListDataSources_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateDataSource">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateDataSource" message="tns:IReportingService_UpdateDataSource_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateDataSourceResponse" message="tns:IReportingService_UpdateDataSource_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateDataSourceValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_UpdateDataSource_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetStyle">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetStyle" message="tns:IReportingService_GetStyle_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetStyleResponse" message="tns:IReportingService_GetStyle_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetStyleValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetStyle_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetStyleComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetStyle_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreateStyle">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateStyle" message="tns:IReportingService_CreateStyle_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateStyleResponse" message="tns:IReportingService_CreateStyle_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateStyleValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreateStyle_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteStyle">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteStyle" message="tns:IReportingService_DeleteStyle_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteStyleResponse" message="tns:IReportingService_DeleteStyle_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteStyleValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_DeleteStyle_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="ListStyles">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListStyles" message="tns:IReportingService_ListStyles_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListStylesResponse" message="tns:IReportingService_ListStyles_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListStylesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_ListStyles_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateStyle">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateStyle" message="tns:IReportingService_UpdateStyle_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateStyleResponse" message="tns:IReportingService_UpdateStyle_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateStyleValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_UpdateStyle_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="ImportRemoteReport">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ImportRemoteReport" message="tns:IReportingService_ImportRemoteReport_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ImportRemoteReportResponse" message="tns:IReportingService_ImportRemoteReport_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ImportRemoteReportComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_ImportRemoteReport_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ImportRemoteReportValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_ImportRemoteReport_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetReportNumberByName">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportNumberByName" message="tns:IReportingService_GetReportNumberByName_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportNumberByNameResponse" message="tns:IReportingService_GetReportNumberByName_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportNumberByNameValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetReportNumberByName_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportNumberByNameComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetReportNumberByName_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetReportEndUserListIds">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportEndUserListIds" message="tns:IReportingService_GetReportEndUserListIds_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportEndUserListIdsResponse" message="tns:IReportingService_GetReportEndUserListIds_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportEndUserListIdsValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetReportEndUserListIds_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportEndUserListIdsComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetReportEndUserListIds_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetPanelIdForReport">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPanelIdForReport" message="tns:IReportingService_GetPanelIdForReport_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPanelIdForReportResponse" message="tns:IReportingService_GetPanelIdForReport_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPanelIdForReportComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetPanelIdForReport_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPanelIdForReportValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetPanelIdForReport_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetEnduserListIdByName">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetEnduserListIdByName" message="tns:IReportingService_GetEnduserListIdByName_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetEnduserListIdByNameResponse" message="tns:IReportingService_GetEnduserListIdByName_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetEnduserListIdByNameComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetEnduserListIdByName_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetEnduserListIdByNameValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetEnduserListIdByName_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="AssignPortalUserList">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/AssignPortalUserList" message="tns:IReportingService_AssignPortalUserList_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/AssignPortalUserListResponse" message="tns:IReportingService_AssignPortalUserList_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/AssignPortalUserListComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_AssignPortalUserList_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/AssignPortalUserListValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_AssignPortalUserList_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreateEnduserList">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateEnduserList" message="tns:IReportingService_CreateEnduserList_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateEnduserListResponse" message="tns:IReportingService_CreateEnduserList_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateEnduserListComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_CreateEnduserList_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateEnduserListValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreateEnduserList_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetReport">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReport" message="tns:IReportingService_GetReport_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportResponse" message="tns:IReportingService_GetReport_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetReport_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetReport_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetReportDefinitionXml">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportDefinitionXml" message="tns:IReportingService_GetReportDefinitionXml_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportDefinitionXmlResponse" message="tns:IReportingService_GetReportDefinitionXml_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportDefinitionXmlValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetReportDefinitionXml_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportDefinitionXmlComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetReportDefinitionXml_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreateReport">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReport" message="tns:IReportingService_CreateReport_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportResponse" message="tns:IReportingService_CreateReport_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreateReport_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreateReportFromTemplate">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportFromTemplate" message="tns:IReportingService_CreateReportFromTemplate_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportFromTemplateResponse" message="tns:IReportingService_CreateReportFromTemplate_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportFromTemplateValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreateReportFromTemplate_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteReport">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteReport" message="tns:IReportingService_DeleteReport_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteReportResponse" message="tns:IReportingService_DeleteReport_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteReportValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_DeleteReport_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="ListReports">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListReports" message="tns:IReportingService_ListReports_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListReportsResponse" message="tns:IReportingService_ListReports_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListReportsValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_ListReports_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateReport">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReport" message="tns:IReportingService_UpdateReport_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportResponse" message="tns:IReportingService_UpdateReport_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_UpdateReport_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetAnalystNode">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystNode" message="tns:IReportingService_GetAnalystNode_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystNodeResponse" message="tns:IReportingService_GetAnalystNode_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystNodeValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetAnalystNode_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystNodeComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetAnalystNode_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreateAnalystNodes">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateAnalystNodes" message="tns:IReportingService_CreateAnalystNodes_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateAnalystNodesResponse" message="tns:IReportingService_CreateAnalystNodes_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateAnalystNodesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreateAnalystNodes_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateAnalystNode">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateAnalystNode" message="tns:IReportingService_UpdateAnalystNode_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateAnalystNodeResponse" message="tns:IReportingService_UpdateAnalystNode_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateAnalystNodeValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_UpdateAnalystNode_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteAnalystNode">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteAnalystNode" message="tns:IReportingService_DeleteAnalystNode_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteAnalystNodeResponse" message="tns:IReportingService_DeleteAnalystNode_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteAnalystNodeValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_DeleteAnalystNode_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="MoveAnalystNode">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveAnalystNode" message="tns:IReportingService_MoveAnalystNode_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveAnalystNodeResponse" message="tns:IReportingService_MoveAnalystNode_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveAnalystNodeValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_MoveAnalystNode_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetAnalystTable">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystTable" message="tns:IReportingService_GetAnalystTable_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystTableResponse" message="tns:IReportingService_GetAnalystTable_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystTableValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetAnalystTable_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystTableComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetAnalystTable_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateAnalystTable">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateAnalystTable" message="tns:IReportingService_UpdateAnalystTable_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateAnalystTableResponse" message="tns:IReportingService_UpdateAnalystTable_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateAnalystTableValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_UpdateAnalystTable_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreateFilterNodes">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateFilterNodes" message="tns:IReportingService_CreateFilterNodes_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateFilterNodesResponse" message="tns:IReportingService_CreateFilterNodes_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateFilterNodesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreateFilterNodes_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetFilterNode">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetFilterNode" message="tns:IReportingService_GetFilterNode_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetFilterNodeResponse" message="tns:IReportingService_GetFilterNode_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetFilterNodeComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetFilterNode_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetFilterNodeValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetFilterNode_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateFilterNodes">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateFilterNodes" message="tns:IReportingService_UpdateFilterNodes_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateFilterNodesResponse" message="tns:IReportingService_UpdateFilterNodes_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateFilterNodesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_UpdateFilterNodes_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteFilterNodes">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteFilterNodes" message="tns:IReportingService_DeleteFilterNodes_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteFilterNodesResponse" message="tns:IReportingService_DeleteFilterNodes_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteFilterNodesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_DeleteFilterNodes_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="MoveFilterNodes">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveFilterNodes" message="tns:IReportingService_MoveFilterNodes_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveFilterNodesResponse" message="tns:IReportingService_MoveFilterNodes_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveFilterNodesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_MoveFilterNodes_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetReportTreeNode">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportTreeNode" message="tns:IReportingService_GetReportTreeNode_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportTreeNodeResponse" message="tns:IReportingService_GetReportTreeNode_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportTreeNodeValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetReportTreeNode_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportTreeNodeComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetReportTreeNode_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreateReportTreeNodes">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportTreeNodes" message="tns:IReportingService_CreateReportTreeNodes_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportTreeNodesResponse" message="tns:IReportingService_CreateReportTreeNodes_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportTreeNodesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreateReportTreeNodes_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteReportTreeNode">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteReportTreeNode" message="tns:IReportingService_DeleteReportTreeNode_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteReportTreeNodeResponse" message="tns:IReportingService_DeleteReportTreeNode_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteReportTreeNodeValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_DeleteReportTreeNode_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="MoveReportTreeNodes">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveReportTreeNodes" message="tns:IReportingService_MoveReportTreeNodes_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveReportTreeNodesResponse" message="tns:IReportingService_MoveReportTreeNodes_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveReportTreeNodesValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_MoveReportTreeNodes_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateReportTreeNode">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportTreeNode" message="tns:IReportingService_UpdateReportTreeNode_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportTreeNodeResponse" message="tns:IReportingService_UpdateReportTreeNode_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportTreeNodeValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_UpdateReportTreeNode_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="CreatePageComponents">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreatePageComponents" message="tns:IReportingService_CreatePageComponents_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreatePageComponentsResponse" message="tns:IReportingService_CreatePageComponents_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreatePageComponentsValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_CreatePageComponents_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="DeletePageComponent">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeletePageComponent" message="tns:IReportingService_DeletePageComponent_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeletePageComponentResponse" message="tns:IReportingService_DeletePageComponent_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeletePageComponentValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_DeletePageComponent_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetPageComponent">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPageComponent" message="tns:IReportingService_GetPageComponent_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPageComponentResponse" message="tns:IReportingService_GetPageComponent_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPageComponentValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetPageComponent_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPageComponentComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_GetPageComponent_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="ExecuteBatch">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ExecuteBatch" message="tns:IReportingService_ExecuteBatch_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ExecuteBatchResponse" message="tns:IReportingService_ExecuteBatch_OutputMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RenderTable">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderTable" message="tns:IReportingService_RenderTable_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderTableResponse" message="tns:IReportingService_RenderTable_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderTableValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_RenderTable_ValidationFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderTableComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_RenderTable_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RenderPageTitle">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderPageTitle" message="tns:IReportingService_RenderPageTitle_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderPageTitleResponse" message="tns:IReportingService_RenderPageTitle_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderPageTitleComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_RenderPageTitle_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RenderActiveFilterSummary">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderActiveFilterSummary" message="tns:IReportingService_RenderActiveFilterSummary_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderActiveFilterSummaryResponse" message="tns:IReportingService_RenderActiveFilterSummary_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderActiveFilterSummaryComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_RenderActiveFilterSummary_ComponentNotFoundFaultFault_FaultMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderActiveFilterSummaryRenderedObjectIsEmptyFaultFault" name="RenderedObjectIsEmptyFaultFault" message="tns:IReportingService_RenderActiveFilterSummary_RenderedObjectIsEmptyFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RenderText">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderText" message="tns:IReportingService_RenderText_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderTextResponse" message="tns:IReportingService_RenderText_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderTextComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_RenderText_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RenderQuestionnaireText">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderQuestionnaireText" message="tns:IReportingService_RenderQuestionnaireText_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderQuestionnaireTextResponse" message="tns:IReportingService_RenderQuestionnaireText_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderQuestionnaireTextComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_RenderQuestionnaireText_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RenderGauge">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderGauge" message="tns:IReportingService_RenderGauge_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderGaugeResponse" message="tns:IReportingService_RenderGauge_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderGaugeComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_RenderGauge_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="RenderChart">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderChart" message="tns:IReportingService_RenderChart_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderChartResponse" message="tns:IReportingService_RenderChart_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderChartComponentNotFoundFaultFault" name="ComponentNotFoundFaultFault" message="tns:IReportingService_RenderChart_ComponentNotFoundFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="GetReportPermissions">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportPermissions" message="tns:IReportingService_GetReportPermissions_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportPermissionsResponse" message="tns:IReportingService_GetReportPermissions_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportPermissionsValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_GetReportPermissions_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateReportPermissions">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportPermissions" message="tns:IReportingService_UpdateReportPermissions_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportPermissionsResponse" message="tns:IReportingService_UpdateReportPermissions_OutputMessage"/>
      <wsdl:fault wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportPermissionsValidationFaultFault" name="ValidationFaultFault" message="tns:IReportingService_UpdateReportPermissions_ValidationFaultFault_FaultMessage"/>
    </wsdl:operation>
    <wsdl:operation name="AssignTestReportingLicencesForCompany">
      <wsdl:input wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/AssignTestReportingLicencesForCompany" message="tns:IReportingService_AssignTestReportingLicencesForCompany_InputMessage"/>
      <wsdl:output wsaw:Action="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/AssignTestReportingLicencesForCompanyResponse" message="tns:IReportingService_AssignTestReportingLicencesForCompany_OutputMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_IReportingService" type="tns:IReportingService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetDataSource">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateDataSource">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteDataSource">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ListDataSources">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListDataSources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateDataSource">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetStyle">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetStyle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateStyle">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateStyle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteStyle">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteStyle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ListStyles">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListStyles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateStyle">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateStyle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ImportRemoteReport">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ImportRemoteReport" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetReportNumberByName">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportNumberByName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetReportEndUserListIds">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportEndUserListIds" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPanelIdForReport">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPanelIdForReport" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetEnduserListIdByName">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetEnduserListIdByName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AssignPortalUserList">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/AssignPortalUserList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateEnduserList">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateEnduserList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetReport">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReport" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetReportDefinitionXml">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportDefinitionXml" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateReport">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReport" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateReportFromTemplate">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportFromTemplate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteReport">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteReport" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ListReports">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ListReports" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateReport">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReport" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetAnalystNode">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystNode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateAnalystNodes">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateAnalystNodes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateAnalystNode">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateAnalystNode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteAnalystNode">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteAnalystNode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="MoveAnalystNode">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveAnalystNode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetAnalystTable">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetAnalystTable" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateAnalystTable">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateAnalystTable" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateFilterNodes">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateFilterNodes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetFilterNode">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetFilterNode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateFilterNodes">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateFilterNodes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteFilterNodes">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteFilterNodes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="MoveFilterNodes">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveFilterNodes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetReportTreeNode">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportTreeNode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateReportTreeNodes">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreateReportTreeNodes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteReportTreeNode">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeleteReportTreeNode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="MoveReportTreeNodes">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/MoveReportTreeNodes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateReportTreeNode">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportTreeNode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreatePageComponents">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/CreatePageComponents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeletePageComponent">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/DeletePageComponent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPageComponent">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetPageComponent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ExecuteBatch">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/ExecuteBatch" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenderTable">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderTable" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RenderPageTitle">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderPageTitle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RenderActiveFilterSummary">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderActiveFilterSummary" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
      <wsdl:fault name="RenderedObjectIsEmptyFaultFault">
        <soap:fault use="literal" name="RenderedObjectIsEmptyFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RenderText">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderText" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RenderQuestionnaireText">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderQuestionnaireText" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RenderGauge">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderGauge" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RenderChart">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/RenderChart" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComponentNotFoundFaultFault">
        <soap:fault use="literal" name="ComponentNotFoundFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetReportPermissions">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/GetReportPermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateReportPermissions">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/UpdateReportPermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ValidationFaultFault">
        <soap:fault use="literal" name="ValidationFaultFault" namespace=""/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AssignTestReportingLicencesForCompany">
      <soap:operation soapAction="http://firmglobal.com/Confirmit/webservices/reporting/27-03-2008/IReportingService/AssignTestReportingLicencesForCompany" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ReportingService">
    <wsdl:port name="BasicHttpBinding_IReportingService" binding="tns:BasicHttpBinding_IReportingService">
      <soap:address location="https://authoring.ssisurveys.com/confirmit/webservices/current/reporting.svc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>